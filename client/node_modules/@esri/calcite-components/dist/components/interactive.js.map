{"file":"interactive.js","mappings":";;;;;;;AAQA,SAAS,gBAAgB;IACvB,OAAQ,SAAiB,CAAC,aAAa,CAAC;AAC1C,CAAC;SAEe,kBAAkB;IAChC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;QACpB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,MAAM,GAAG,gBAAgB,EAAE,CAAC;IAElC,OAAO,MAAM,EAAE,MAAM;UACjB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,KAAK,IAAI,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;UAC1E,SAAS,CAAC,SAAS,CAAC;AAC1B;;ACMA;AACA,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAIxD,MAAM,0BAA0B,GAA0D,SAAS;MAC/F,IAAI,OAAO,EAAE;MACb,IAAI,CAAC;AAET,SAAS,gBAAgB;IACvB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAA8B,CAAC;IAEpD,IAAI,CAAC,QAAQ,EAAE;QACb,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxC;AACH,CAAC;AAED,SAAS,aAAa,CAAC,KAAmB;IACxC,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAgC,CAAC;IAElE,IAAI,SAAS,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;QACpE,OAAO;KACR;IAED,MAAM,EAAE,QAAQ,EAAE,GAAG,kBAAkB,CAAC;IAExC,IAAI,QAAQ,EAAE;;QAEZ,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;AACH,CAAC;AAED,MAAM,kCAAkC,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAE7E,SAAS,mCAAmC,CAAC,KAAiB;IAC5D,IAAI,SAAS,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,KAAK,CAAC,MAAgC,CAAC,EAAE;QACxF,OAAO;KACR;IAED,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,MAAgC,CAAC;;;IAI5D,IAAI,QAAQ,EAAE;QACZ,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjC,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;AACH,CAAC;AAED,MAAM,kBAAkB,GAAG,EAAE,OAAO,EAAE,IAAI,EAAW,CAAC;AAEtD;;;;;;;;;;;;;SAagB,qBAAqB,CACnC,SAA+B,EAC/B,iBAAgE,KAAK;IAErE,IAAI,SAAS,CAAC,QAAQ,EAAE;QACtB,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC5C,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAEnD,IAAI,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;YAChD,QAAQ,CAAC,aAA6B,CAAC,IAAI,EAAE,CAAC;SAChD;QAED,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAE5B,OAAO;KACR;IAED,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAE9B,IAAI,OAAO,cAAc,KAAK,UAAU,EAAE;QACxC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;KACpF;SAAM,IAAI,cAAc,KAAK,IAAI,EAAE;QAClC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;KAC5C;SAAM,IAAI,cAAc,KAAK,KAAK,EAAE;QACnC,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;KAC1C;SAAM,CAEN;IAED,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,gBAAgB,CAAC,SAA+B;IACvD,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,gBAAgB,CAAC;IACtC,uBAAuB,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAClF,CAAC;AAED,SAAS,uBAAuB,CAAC,OAAoB;IACnD,IAAI,CAAC,OAAO,EAAE;;QAEZ,OAAO;KACR;IAED,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;IAC3E,kCAAkC,CAAC,OAAO,CAAC,CAAC,KAAK,KAC/C,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,mCAAmC,EAAE,kBAAkB,CAAC,CACzF,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,SAA+B;IACvD,OAAO,0BAA0B,CAAC,GAAG,CAAC,SAAS,CAAC,EAA4B,CAAC,CAAC;AAChF,CAAC;AAED,SAAS,kBAAkB,CAAC,SAA+B;IACzD,OAAO,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC;IAC1B,0BAA0B,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AACrF,CAAC;AAED,SAAS,0BAA0B,CAAC,OAAoB;IACtD,IAAI,CAAC,OAAO,EAAE;;QAEZ,OAAO;KACR;IAED,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;IAC9E,kCAAkC,CAAC,OAAO,CAAC,CAAC,KAAK,KAC/C,OAAO,CAAC,mBAAmB,CAAC,KAAK,EAAE,mCAAmC,EAAE,kBAAkB,CAAC,CAC5F,CAAC;AACJ,CAAC;AAED;;;;;;;SAOgB,kBAAkB,CAAC,SAA+B;IAChE,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE;QACrC,OAAO;KACR;IAED,MAAM,MAAM,GACV,SAAS,CAAC,EAAE,CAAC,aAAa,IAAI,SAAS,CAAC,EAAE,CAAC;IAC7C,0BAA0B,CAAC,GAAG,CAAC,SAAS,CAAC,EAA4B,EAAE,MAAM,CAAC,CAAC;IAC/E,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAC9B,CAAC;AAED;;;;;;;SAOgB,qBAAqB,CAAC,SAA+B;IACnE,IAAI,CAAC,SAAS,EAAE;QACd,OAAO;KACR;;IAGD,0BAA0B,CAAC,MAAM,CAAC,SAAS,CAAC,EAA4B,CAAC,CAAC;IAC1E,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAChC;;;;","names":[],"sources":["src/utils/browser.ts","src/utils/interactive.ts"],"sourcesContent":["import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n","import { getUserAgentString } from \"./browser\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\ntype HostIsTabbablePredicate = () => boolean;\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst interactiveElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !interactiveElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  if (isFirefox && !interactiveElementToParent.get(event.target as InteractiveHTMLElement)) {\n    return;\n  }\n\n  const { disabled } = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  //⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n * @param hostIsTabbable – when set to true or its predicate returns true, the host is tabbable and will be managed by the helper. Set to \"managed\" for cases where a component's parent determines which item is tabbable (i.e., sets `tabindex` to allow tabbing).\n */\nexport function updateHostInteraction(\n  component: InteractiveComponent,\n  hostIsTabbable: boolean | HostIsTabbablePredicate | \"managed\" = false\n): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"tabindex\", \"-1\");\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  if (typeof hostIsTabbable === \"function\") {\n    component.el.setAttribute(\"tabindex\", hostIsTabbable.call(component) ? \"0\" : \"-1\");\n  } else if (hostIsTabbable === true) {\n    component.el.setAttribute(\"tabindex\", \"0\");\n  } else if (hostIsTabbable === false) {\n    component.el.removeAttribute(\"tabindex\");\n  } else {\n    // noop for \"managed\" as owning component will manage its tab index\n  }\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(isFirefox ? getParentElement(component) : component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions)\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return interactiveElementToParent.get(component.el as InteractiveHTMLElement);\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(isFirefox ? getParentElement(component) : component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions)\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  const parent =\n    component.el.parentElement || component.el; /* assume element is host if it has no parent when connected */\n  interactiveElementToParent.set(component.el as InteractiveHTMLElement, parent);\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  // always remove on disconnect as render or connect will restore it\n  interactiveElementToParent.delete(component.el as InteractiveHTMLElement);\n  restoreInteraction(component);\n}\n"],"version":3}