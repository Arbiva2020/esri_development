{"version":3,"names":["DURATIONS","slow","medium","fast","SLOTS","actionsEnd","title","message","link","CSS","close","container","containerBottom","containerBottomEnd","containerBottomStart","containerQueued","containerTop","containerTopEnd","containerTopStart","content","contentContainer","dismissProgress","footer","icon","containerSlottedInShell","queueCount","queueCountActive","textContainer","alertCss","Alert","this","autoCloseTimeoutId","totalOpenTime","totalHoverTime","openTransitionProp","setTransitionEl","el","transitionEl","closeAlert","queued","open","queue","filter","determineActiveAlert","calciteInternalAlertSync","emit","actionsEndSlotChangeHandler","event","hasEndActions","slotChangeHasAssignedElement","handleMouseOver","window","clearTimeout","Date","now","initialOpenTime","lastMouseOverBegin","handleMouseLeave","hoverDuration","timeRemaining","autoCloseDuration","setTimeout","openHandler","onToggleOpenCloseComponent","calciteInternalAlertRegister","onMessagesChange","updateDuration","autoClose","connectedCallback","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","dispatchEvent","CustomEvent","detail","alert","queueTimeout","disconnectLocalized","disconnectMessages","slottedInShell","render","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","signDisplay","label","placement","role","hidden","effectiveIcon","setRequestedIcon","KindIcons","kind","hasQueuedAlerts","queueLength","h","Host","toAriaBoolean","class","onPointerEnter","onPointerLeave","ref","renderIcon","name","renderActionsEnd","renderQueueCount","renderCloseButton","messages","key","onClick","type","closeButton","scale","getIconScale","queueNumber","queueText","numberFormatter","format","value","onSlotchange","flipRtl","iconFlipRtl","alertSync","length","stopPropagation","alertRegister","includes","push","alertUnregister","setFocus","componentFocusable","alertLinkEl","getSlotted","selector","focus","effectiveLocaleChange","updateMessages","openAlert","onBeforeOpen","calciteAlertBeforeOpen","onOpen","calciteAlertOpen","onBeforeClose","calciteAlertBeforeClose","onClose","calciteAlertClose"],"sources":["src/components/alert/resources.ts","src/components/alert/alert.scss?tag=calcite-alert&encapsulation=shadow","src/components/alert/alert.tsx"],"sourcesContent":["export const DURATIONS = {\n  slow: 14000,\n  medium: 10000,\n  fast: 6000,\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  title: \"title\",\n  message: \"message\",\n  link: \"link\",\n};\n\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  close: \"close\",\n  container: \"container\",\n  containerBottom: \"container--bottom\",\n  containerBottomEnd: \"container--bottom-end\",\n  containerBottomStart: \"container--bottom-start\",\n  containerQueued: \"container--queued\",\n  containerTop: \"container--top\",\n  containerTopEnd: \"container--top-end\",\n  containerTopStart: \"container--top-start\",\n  content: \"content\",\n  contentContainer: \"content-container\",\n  dismissProgress: \"dismiss-progress\",\n  footer: \"footer\",\n  icon: \"icon\",\n  containerSlottedInShell: \"container--slotted-in-shell\",\n  queueCount: \"queue-count\",\n  queueCountActive: \"queue-count--active\",\n  textContainer: \"text-container\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-alert-width: Specifies the width of the component.\n */\n\n$border-style: 1px solid var(--calcite-color-border-3);\n\n:host {\n  --calcite-alert-edge-distance: theme(\"spacing.8\");\n  --calcite-alert-dismiss-progress-background: var(--calcite-color-transparent-tint);\n  @apply block;\n}\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  fixed\n  flex\n  items-center\n  justify-center\n  min-w-min\n  mx-auto\n  my-0\n  opacity-0\n  pointer-events-none\n  shadow-2\n  text-start\n  w-full\n  z-toast;\n\n  border-radius: var(--calcite-border-radius);\n  border-block-start: 0 solid transparent;\n  border-inline: $border-style;\n  border-block-end: $border-style;\n  inline-size: var(--calcite-alert-width);\n  max-inline-size: calc(100% - (var(--calcite-alert-edge-distance) * 2));\n  transition: var(--calcite-internal-animation-timing-slow) $easing-function,\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n    all var(--calcite-animation-timing) ease-in-out;\n\n  &--bottom,\n  &--top {\n    inset-inline-end: 0;\n    inset-inline-start: 0;\n  }\n  &[class*=\"bottom\"] {\n    transform: translate3d(0, var(--calcite-alert-edge-distance), 0);\n    inset-block-end: var(--calcite-alert-edge-distance);\n  }\n  &[class*=\"top\"] {\n    transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), 0);\n    inset-block-start: var(--calcite-alert-edge-distance);\n  }\n  &[class*=\"start\"] {\n    inset-inline-start: var(--calcite-alert-edge-distance);\n    inset-inline-end: auto;\n  }\n  &[class*=\"end\"] {\n    inset-inline-end: var(--calcite-alert-edge-distance);\n    inset-inline-start: auto;\n  }\n}\n\n.icon {\n  @apply flex flex-col items-center justify-center p-0;\n  margin-block: auto;\n  margin-inline-end: auto;\n  padding-inline-start: var(--calcite-alert-spacing-token-large);\n}\n\n.close {\n  @apply bg-transparent border-none cursor-pointer flex items-center justify-end outline-none self-stretch text-color-3;\n  -webkit-appearance: none;\n  padding: var(--calcite-alert-spacing-token-large);\n\n  @apply focus-base;\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply bg-foreground-2 text-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n}\n\n.queue-count {\n  @apply bg-foreground-1\n  cursor-default\n  flex\n  font-medium\n  invisible\n  items-center\n  justify-around\n  min-w-min\n  opacity-0\n  overflow-hidden\n  self-stretch\n  text-center\n  text-color-2\n  transition-default;\n  border-inline: 0 solid transparent;\n  border-start-end-radius: 0;\n\n  &--active {\n    @apply visible opacity-100;\n  }\n}\n\n.dismiss-progress {\n  @apply absolute\n  block\n  w-full\n  overflow-hidden;\n  inset-inline: 0;\n  inset-block-start: -2px;\n  block-size: 2px;\n  border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0;\n  &:after {\n    @apply absolute\n    top-0\n    block;\n    block-size: 2px;\n    content: \"\";\n    background-color: var(--calcite-alert-dismiss-progress-background);\n    inset-inline-end: 0;\n  }\n}\n\n.actions-end {\n  @apply flex self-stretch;\n}\n\n.text-container {\n  @apply box-border flex flex-auto min-w-0 flex-col break-words;\n  padding-block: var(--calcite-alert-spacing-token-small);\n  padding-inline: var(--calcite-alert-spacing-token-large) var(--calcite-alert-spacing-token-small);\n}\n\n.footer {\n  @apply flex justify-end pt-px relative self-stretch w-auto;\n  block-size: inherit;\n}\n\n// scale variables\n:host([scale=\"s\"]) {\n  --calcite-alert-width: 40em;\n  --calcite-alert-spacing-token-small: theme(\"spacing.2\");\n  --calcite-alert-spacing-token-large: theme(\"spacing.3\");\n  --calcite-alert-footer-height: theme(\"height.8\");\n  --calcite-alert-footer-divider-gap: theme(\"spacing[0.5]\");\n\n  @include slotted(\"title\", \"*\") {\n    @apply text-n1-wrap;\n  }\n  @include slotted(\"message\", \"*\") {\n    @apply text-n2-wrap;\n  }\n  @include slotted(\"link\", \"*\") {\n    @apply text-n2-wrap;\n  }\n  .queue-count {\n    @apply mx-2;\n  }\n  .container {\n    --calcite-alert-min-height: 3.5rem;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-alert-width: 50em;\n  --calcite-alert-spacing-token-small: theme(\"spacing.3\");\n  --calcite-alert-spacing-token-large: theme(\"spacing.4\");\n  --calcite-alert-footer-height: theme(\"height.12\");\n  --calcite-alert-footer-divider-gap: theme(\"spacing.1\");\n\n  @include slotted(\"title\", \"*\") {\n    @apply text-0-wrap;\n  }\n  @include slotted(\"message\", \"*\") {\n    @apply text-n1-wrap;\n  }\n  @include slotted(\"link\", \"*\") {\n    @apply text-n1-wrap;\n  }\n  .queue-count {\n    @apply mx-3;\n  }\n  .container {\n    --calcite-alert-min-height: 4.1875rem;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-alert-width: 60em;\n  --calcite-alert-spacing-token-small: theme(\"spacing.4\");\n  --calcite-alert-spacing-token-large: theme(\"spacing.5\");\n  --calcite-alert-footer-height: theme(\"height.16\");\n  --calcite-alert-footer-divider-gap: theme(\"spacing.2\");\n\n  @include slotted(\"title\", \"*\") {\n    @apply text-1-wrap mb-1;\n  }\n  @include slotted(\"message\", \"*\") {\n    @apply text-0-wrap;\n  }\n  @include slotted(\"link\", \"*\") {\n    @apply text-0-wrap;\n  }\n  .queue-count {\n    @apply mx-4;\n  }\n  .container {\n    --calcite-alert-min-height: 5.625rem;\n  }\n}\n\n:host([open]) {\n  .container:not(.container--queued) {\n    @apply border-t-2 opacity-100;\n    pointer-events: initial;\n    &[class*=\"bottom\"] {\n      transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), inherit);\n    }\n    &[class*=\"top\"] {\n      transform: translate3d(0, var(--calcite-alert-edge-distance), inherit);\n    }\n  }\n}\n\n:host([auto-close]) > .queue-count {\n  border-inline-end: 0 solid transparent;\n}\n\n@include slotted(\"title\", \"*\") {\n  @apply text-0-wrap\n    text-color-1\n    font-medium;\n}\n\n@include slotted(\"message\", \"*\") {\n  @apply text-n1-wrap\n    text-color-2\n    m-0\n    inline\n    font-normal;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n@include slotted(\"link\", \"*\") {\n  @apply text-color-link inline-flex;\n}\n\n$alertKinds: \"brand\" var(--calcite-color-brand), \"info\" var(--calcite-color-status-info),\n  \"danger\" var(--calcite-color-status-danger), \"success\" var(--calcite-color-status-success),\n  \"warning\" var(--calcite-color-status-warning);\n\n@each $alertKind in $alertKinds {\n  $name: nth($alertKind, 1);\n  $kind: nth($alertKind, 2);\n\n  :host([kind=\"#{$name}\"]) {\n    .container {\n      border-block-start-color: $kind;\n\n      & .icon {\n        color: $kind;\n      }\n    }\n  }\n}\n\n$alertDurations: \"fast\" 6000ms, \"medium\" 10000ms, \"slow\" 14000ms;\n\n@each $alertDuration in $alertDurations {\n  $name: nth($alertDuration, 1);\n  $duration: nth($alertDuration, 2);\n\n  :host([auto-close-duration=\"#{$name}\"]) .dismiss-progress:after {\n    animation: dismissProgress $duration ease-out;\n  }\n  :host(:hover[auto-close-duration=\"#{$name}\"]) .dismiss-progress:after {\n    animation-play-state: paused;\n  }\n}\n\n@keyframes dismissProgress {\n  0% {\n    @apply w-0 opacity-75;\n  }\n  100% {\n    @apply w-full opacity-100;\n  }\n}\n\n/**\n * Conditional styles for when Alert is slotted in Shell\n */\n.container--slotted-in-shell {\n  @apply absolute;\n}\n\n@include base-component();\n@include calciteHydratedHidden();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getSlotted,\n  setRequestedIcon,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { MenuPlacement } from \"../../utils/floating-ui\";\nimport { getIconScale } from \"../../utils/component\";\n\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { KindIcons } from \"../resources\";\nimport { AlertMessages } from \"./assets/alert/t9n\";\nimport { AlertDuration, Sync, Unregister } from \"./interfaces\";\nimport { CSS, DURATIONS, SLOTS } from \"./resources\";\n\n/**\n * Alerts are meant to provide a way to communicate urgent or important information to users, frequently as a result of an action they took in your app. Alerts are positioned\n * at the bottom of the page. Multiple opened alerts will be added to a queue, allowing users to dismiss them in the order they are provided.\n */\n\n/**\n * @slot title - A slot for adding a title to the component.\n * @slot message - A slot for adding main text to the component.\n * @slot link - A slot for adding a `calcite-action` to take from the component such as: \"undo\", \"try again\", \"link to page\", etc.\n * @slot actions-end - A slot for adding `calcite-action`s to the end of the component. It is recommended to use two or fewer actions.\n */\n\n@Component({\n  tag: \"calcite-alert\",\n  styleUrl: \"alert.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Alert implements OpenCloseComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //---------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component. */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    if (this.open && !this.queued) {\n      this.calciteInternalAlertRegister.emit();\n    }\n    if (!this.open) {\n      this.queue = this.queue.filter((el) => el !== this.el);\n      this.calciteInternalAlertSync.emit({ queue: this.queue });\n    }\n  }\n\n  /** When `true`, the component closes automatically (recommended for passive, non-blocking alerts). */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** Specifies the duration before the component automatically closes (only use with `autoClose`). */\n  @Prop({ reflect: true }) autoCloseDuration: AlertDuration = \"medium\";\n\n  /** Specifies the kind of the component (will apply to top border and icon). */\n  @Prop({ reflect: true }) kind: Extract<\n    \"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\",\n    Kind\n  > = \"brand\";\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively,\n   * pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: string | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies an accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the placement of the component */\n  @Prop({ reflect: true }) placement: MenuPlacement = \"bottom\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: AlertMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<AlertMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) slottedInShell: boolean;\n\n  @Watch(\"autoCloseDuration\")\n  updateDuration(): void {\n    if (this.autoClose && this.autoCloseTimeoutId) {\n      window.clearTimeout(this.autoCloseTimeoutId);\n      this.autoCloseTimeoutId = window.setTimeout(\n        () => this.closeAlert(),\n        DURATIONS[this.autoCloseDuration]\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    const open = this.open;\n    if (open && !this.queued) {\n      this.calciteInternalAlertRegister.emit();\n    }\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.dispatchEvent(\n      new CustomEvent<Unregister>(\"calciteInternalAlertUnregister\", {\n        detail: { alert: this.el },\n      })\n    );\n    window.clearTimeout(this.autoCloseTimeoutId);\n    window.clearTimeout(this.queueTimeout);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.slottedInShell = false;\n  }\n\n  render(): VNode {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"always\",\n    };\n\n    const { open, autoClose, label, placement, queued } = this;\n    const role = autoClose ? \"alert\" : \"alertdialog\";\n    const hidden = !open;\n    const effectiveIcon = setRequestedIcon(KindIcons, this.icon, this.kind);\n    const hasQueuedAlerts = this.queueLength > 1;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        calcite-hydrated-hidden={hidden}\n        role={role}\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerQueued]: queued,\n            [`${CSS.container}--${placement}`]: true,\n            [CSS.containerSlottedInShell]: this.slottedInShell,\n          }}\n          onPointerEnter={this.autoClose && this.autoCloseTimeoutId ? this.handleMouseOver : null}\n          onPointerLeave={this.autoClose && this.autoCloseTimeoutId ? this.handleMouseLeave : null}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setTransitionEl}\n        >\n          {effectiveIcon && this.renderIcon(effectiveIcon)}\n          <div class={CSS.textContainer}>\n            <slot name={SLOTS.title} />\n            <slot name={SLOTS.message} />\n            <slot name={SLOTS.link} />\n          </div>\n          {this.renderActionsEnd()}\n          {hasQueuedAlerts ? this.renderQueueCount() : null}\n          {this.renderCloseButton()}\n          {open && !queued && autoClose ? <div class={CSS.dismissProgress} /> : null}\n        </div>\n      </Host>\n    );\n  }\n\n  private renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"close\"\n        onClick={this.closeAlert}\n        type=\"button\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.closeButton = el)}\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  private renderQueueCount(): VNode {\n    const queueNumber = this.queueLength > 2 ? this.queueLength - 1 : 1;\n    const queueText = numberStringFormatter.numberFormatter.format(queueNumber);\n\n    return (\n      <div\n        class={{\n          [CSS.queueCount]: true,\n          [CSS.queueCountActive]: this.queueLength > 1,\n        }}\n        key=\"queue-count\"\n      >\n        <calcite-chip scale={this.scale} value={queueText}>\n          {queueText}\n        </calcite-chip>\n      </div>\n    );\n  }\n\n  private renderActionsEnd(): VNode {\n    return (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.actionsEndSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  private renderIcon(icon: string): VNode {\n    return (\n      <div class={CSS.icon}>\n        <calcite-icon flipRtl={this.iconFlipRtl} icon={icon} scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteAlertBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteAlertClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteAlertBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteAlertOpen: EventEmitter<void>;\n\n  /**\n   * Fires to sync queue when opened or closed.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAlertSync: EventEmitter<Sync>;\n\n  /**\n   * Fires when the component is added to DOM - used to receive initial queue.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAlertRegister: EventEmitter<void>;\n\n  // when an alert is opened or closed, update queue and determine active alert\n  @Listen(\"calciteInternalAlertSync\", { target: \"window\" })\n  alertSync(event: CustomEvent): void {\n    if (this.queue !== event.detail.queue) {\n      this.queue = event.detail.queue;\n    }\n    this.queueLength = this.queue.length;\n    this.determineActiveAlert();\n    event.stopPropagation();\n  }\n\n  // when an alert is first registered, trigger a queue sync\n  @Listen(\"calciteInternalAlertRegister\", { target: \"window\" })\n  alertRegister(): void {\n    if (this.open && !this.queue.includes(this.el as HTMLCalciteAlertElement)) {\n      this.queued = true;\n      this.queue.push(this.el as HTMLCalciteAlertElement);\n    }\n    this.calciteInternalAlertSync.emit({ queue: this.queue });\n    this.determineActiveAlert();\n  }\n\n  // Event is dispatched on the window because the element is not in the DOM so bubbling won't occur.\n  @Listen(\"calciteInternalAlertUnregister\", { target: \"window\" })\n  alertUnregister(event: CustomEvent<Unregister>): void {\n    const queue = this.queue.filter((el) => el !== event.detail.alert);\n    this.queue = queue;\n\n    window.dispatchEvent(\n      new CustomEvent<Sync>(\"calciteInternalAlertSync\", {\n        detail: { queue },\n      })\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's \"close\" button (the first focusable item). */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const alertLinkEl: HTMLCalciteLinkElement = getSlotted(this.el, { selector: \"calcite-link\" });\n\n    if (!this.closeButton && !alertLinkEl) {\n      return;\n    } else if (alertLinkEl) {\n      return alertLinkEl.setFocus();\n    } else if (this.closeButton) {\n      this.closeButton.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAlertElement;\n\n  @State() defaultMessages: AlertMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasEndActions = false;\n\n  /** the list of queued alerts */\n  @State() queue: HTMLCalciteAlertElement[] = [];\n\n  /** the count of queued alerts */\n  @State() queueLength = 0;\n\n  /** is the alert queued */\n  @State() queued = false;\n\n  private autoCloseTimeoutId: number = null;\n\n  private closeButton: HTMLButtonElement;\n\n  private initialOpenTime: number;\n\n  private lastMouseOverBegin: number;\n\n  private queueTimeout: number;\n\n  private totalOpenTime = 0;\n\n  private totalHoverTime = 0;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  /** determine which alert is active */\n  private determineActiveAlert(): void {\n    if (this.queue?.[0] === this.el) {\n      this.openAlert();\n      if (this.autoClose && !this.autoCloseTimeoutId) {\n        this.initialOpenTime = Date.now();\n        this.autoCloseTimeoutId = window.setTimeout(\n          () => this.closeAlert(),\n          DURATIONS[this.autoCloseDuration]\n        );\n      }\n    } else {\n      return;\n    }\n  }\n\n  /** close and emit calciteInternalAlertSync event with the updated queue payload */\n  private closeAlert = (): void => {\n    this.autoCloseTimeoutId = null;\n    this.queued = false;\n    this.open = false;\n    this.queue = this.queue.filter((el) => el !== this.el);\n    this.determineActiveAlert();\n    this.calciteInternalAlertSync.emit({ queue: this.queue });\n  };\n\n  onBeforeOpen(): void {\n    this.calciteAlertBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteAlertOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteAlertBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteAlertClose.emit();\n  }\n\n  /** remove queued class after animation completes */\n  private openAlert(): void {\n    window.clearTimeout(this.queueTimeout);\n    this.queueTimeout = window.setTimeout(() => (this.queued = false), 300);\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  private handleMouseOver = (): void => {\n    window.clearTimeout(this.autoCloseTimeoutId);\n    this.totalOpenTime = Date.now() - this.initialOpenTime;\n    this.lastMouseOverBegin = Date.now();\n  };\n\n  private handleMouseLeave = (): void => {\n    const hoverDuration = Date.now() - this.lastMouseOverBegin;\n    const timeRemaining =\n      DURATIONS[this.autoCloseDuration] - this.totalOpenTime + this.totalHoverTime;\n    this.totalHoverTime = this.totalHoverTime ? hoverDuration + this.totalHoverTime : hoverDuration;\n    this.autoCloseTimeoutId = window.setTimeout(() => this.closeAlert(), timeRemaining);\n  };\n}\n"],"mappings":"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"}