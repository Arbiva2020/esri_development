{"version":3,"names":["radioButtonGroupCss","RadioButtonGroup","this","mutationObserver","createObserver","passPropsToRadioButtons","radioButtons","Array","from","el","querySelectorAll","selectedItem","find","radioButton","checked","length","forEach","disabled","hidden","name","required","scale","onDisabledChange","onHiddenChange","onLayoutChange","onScaleChange","connectedCallback","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnect","getFocusableRadioButton","radiobutton","setFocus","componentFocusable","radioButtonChangeHandler","event","target","calciteRadioButtonGroupChange","emit","render","h","Host","role"],"sources":["src/components/radio-button-group/radio-button-group.scss?tag=calcite-radio-button-group&encapsulation=shadow","src/components/radio-button-group/radio-button-group.tsx"],"sourcesContent":[":host {\n  @apply flex;\n  max-inline-size: 100vw;\n}\n:host([layout=\"horizontal\"]) {\n  @apply flex-row flex-wrap;\n}\n:host([layout=\"horizontal\"][scale=\"s\"]) {\n  @apply gap-4;\n}\n:host([layout=\"horizontal\"][scale=\"m\"]) {\n  @apply gap-5;\n}\n:host([layout=\"horizontal\"][scale=\"l\"]) {\n  @apply gap-6;\n}\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Layout, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding `calcite-radio-button`s.\n */\n@Component({\n  tag: \"calcite-radio-button-group\",\n  styleUrl: \"radio-button-group.scss\",\n  shadow: true,\n})\nexport class RadioButtonGroup implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  onDisabledChange(): void {\n    this.passPropsToRadioButtons();\n  }\n\n  /** When `true`, the component is not displayed and its `calcite-radio-button`s are not focusable or checkable. */\n  @Prop({ reflect: true }) hidden = false;\n\n  @Watch(\"hidden\")\n  onHiddenChange(): void {\n    this.passPropsToRadioButtons();\n  }\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: Layout = \"horizontal\";\n\n  @Watch(\"layout\")\n  onLayoutChange(): void {\n    this.passPropsToRadioButtons();\n  }\n\n  /** Specifies the name of the component on form submission. Must be unique to other component instances. */\n  @Prop({ reflect: true }) name!: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the component's selected item.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItem: HTMLCalciteRadioButtonElement = null;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  onScaleChange(): void {\n    this.passPropsToRadioButtons();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el!: HTMLCalciteRadioButtonGroupElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.passPropsToRadioButtons());\n\n  @State() radioButtons: HTMLCalciteRadioButtonElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.passPropsToRadioButtons();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private passPropsToRadioButtons = (): void => {\n    this.radioButtons = Array.from(this.el.querySelectorAll(\"calcite-radio-button\"));\n    this.selectedItem =\n      Array.from(this.radioButtons).find((radioButton) => radioButton.checked) || null;\n    if (this.radioButtons.length > 0) {\n      this.radioButtons.forEach((radioButton) => {\n        radioButton.disabled = this.disabled || radioButton.disabled;\n        radioButton.hidden = this.hidden;\n        radioButton.name = this.name;\n        radioButton.required = this.required;\n        radioButton.scale = this.scale;\n      });\n    }\n  };\n\n  private getFocusableRadioButton(): HTMLCalciteRadioButtonElement | null {\n    return this.radioButtons.find((radiobutton) => !radiobutton.disabled) ?? null;\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component has changed.\n   */\n  @Event({ cancelable: false }) calciteRadioButtonGroupChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Method\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the fist focusable `calcite-radio-button` element in the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (this.selectedItem && !this.selectedItem.disabled) {\n      return this.selectedItem.setFocus();\n    }\n    if (this.radioButtons.length > 0) {\n      return this.getFocusableRadioButton()?.setFocus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteRadioButtonChange\")\n  radioButtonChangeHandler(event: CustomEvent): void {\n    this.selectedItem = event.target as HTMLCalciteRadioButtonElement;\n    this.calciteRadioButtonGroupChange.emit();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host role=\"radiogroup\">\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;sJAAA,MAAMA,EAAsB,uV,MC+BfC,EAAgB,M,sGA4D3BC,KAAAC,iBAAmBC,EAAe,YAAY,IAAMF,KAAKG,4BAiCjDH,KAAAG,wBAA0B,KAChCH,KAAKI,aAAeC,MAAMC,KAAKN,KAAKO,GAAGC,iBAAiB,yBACxDR,KAAKS,aACHJ,MAAMC,KAAKN,KAAKI,cAAcM,MAAMC,GAAgBA,EAAYC,WAAY,KAC9E,GAAIZ,KAAKI,aAAaS,OAAS,EAAG,CAChCb,KAAKI,aAAaU,SAASH,IACzBA,EAAYI,SAAWf,KAAKe,UAAYJ,EAAYI,SACpDJ,EAAYK,OAAShB,KAAKgB,OAC1BL,EAAYM,KAAOjB,KAAKiB,KACxBN,EAAYO,SAAWlB,KAAKkB,SAC5BP,EAAYQ,MAAQnB,KAAKmB,KAAK,G,iBA/FA,M,YAQF,M,YAQQ,a,kCAWN,M,kBAOmC,K,WAG/B,I,kBAiBiB,E,CAnDzD,gBAAAC,GACEpB,KAAKG,yB,CAOP,cAAAkB,GACErB,KAAKG,yB,CAOP,cAAAmB,GACEtB,KAAKG,yB,CAoBP,aAAAoB,GACEvB,KAAKG,yB,CAqBP,iBAAAqB,GACExB,KAAKG,0BACLH,KAAKC,kBAAkBwB,QAAQzB,KAAKO,GAAI,CAAEmB,UAAW,KAAMC,QAAS,M,CAGtE,iBAAAC,GACEC,EAAuB7B,K,CAGzB,gBAAA8B,GACEC,EAAmB/B,K,CAGrB,oBAAAgC,GACEhC,KAAKC,kBAAkBgC,Y,CAwBjB,uBAAAC,GACN,OAAOlC,KAAKI,aAAaM,MAAMyB,IAAiBA,EAAYpB,YAAa,I,CAsB3E,cAAMqB,SACEC,EAAmBrC,MACzB,GAAIA,KAAKS,eAAiBT,KAAKS,aAAaM,SAAU,CACpD,OAAOf,KAAKS,aAAa2B,U,CAE3B,GAAIpC,KAAKI,aAAaS,OAAS,EAAG,CAChC,OAAOb,KAAKkC,2BAA2BE,U,EAW3C,wBAAAE,CAAyBC,GACvBvC,KAAKS,aAAe8B,EAAMC,OAC1BxC,KAAKyC,8BAA8BC,M,CASrC,MAAAC,GACE,OACEC,EAACC,EAAI,CAACC,KAAK,cACTF,EAAA,a"}