{"version":3,"names":["CSS","bordered","striped","selectionArea","paginationArea","container","tableContainer","tableFixed","assistiveText","selectionActions","SLOTS","tableHeader","tableFooter","tableCss","Table","this","getSlottedRows","el","assignedElements","flatten","filter","matches","updateRows","headRows","tableHeadSlotEl","bodyRows","tableBodySlotEl","footRows","tableFootSlotEl","allRows","forEach","row","position","indexOf","rowType","positionSection","positionSectionLocalized","localizeNumber","toString","selectionMode","bodyRowCount","length","positionAll","numbered","scale","readCellContentsToAT","colCount","cellCount","querySelectorAll","updateSelectedItems","paginateRows","handlePaginationChange","requestedItem","paginationEl","startItem","pageStartRow","calciteTablePageChange","emit","rowPos","inView","pageSize","hidden","includes","selectedItems","selected","selectedCount","selectedRowCount","selectedRowCountLocalized","calciteTableSelect","handleDeselectAllRows","setSelectedItems","elToMatch","value","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","localize","handleNumberedChange","onMessagesChange","effectiveLocaleChange","updateMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","test","getUserAgentString","componentDidLoad","setComponentLoaded","connectedCallback","connectLocalized","connectMessages","disconnectedCallback","disconnectLocalized","disconnectMessages","calciteChipSelectListener","event","composedPath","target","calciteInternalTableRowFocusEvent","cellPosition","rowPosition","destination","lastCell","visibleBody","visibleAll","lastHeadRow","firstBodyRow","lastBodyRow","firstFootRow","lastTableRow","leavingHeader","leavingFooter","enteringHeader","enteringFooter","destinationCount","find","adjustedPos","undefined","calciteInternalTableRowFocusChange","renderSelectionArea","outOfViewCount","localizedOutOfView","localizedSelectedCount","selectionText","messages","outOfView","hiddenSelected","h","class","kind","icon","title","onClick","round","clear","name","renderPaginationArea","onCalcitePaginationChange","totalItems","ref","renderTHead","onSlotchange","renderTBody","renderTFoot","render","Host","zebra","layout","role","caption"],"sources":["src/components/table/resources.ts","src/components/table/table.scss?tag=calcite-table&encapsulation=shadow","src/components/table/table.tsx"],"sourcesContent":["export const CSS = {\n  bordered: \"bordered\",\n  striped: \"striped\",\n  selectionArea: \"selection-area\",\n  paginationArea: \"pagination-area\",\n  container: \"container\",\n  tableContainer: \"table-container\",\n  tableFixed: \"table--fixed\",\n  assistiveText: \"assistive-text\",\n  selectionActions: \"selection-actions\",\n};\n\nexport const SLOTS = {\n  selectionActions: \"selection-actions\",\n  tableHeader: \"table-header\",\n  tableFooter: \"table-footer\",\n};\n",":host([scale=\"s\"]) {\n  --calcite-internal-table-cell-padding: 0.25rem;\n  --calcite-internal-table-cell-font-size: var(--calcite-font-size--2);\n  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--3);\n}\n:host([scale=\"m\"]) {\n  --calcite-internal-table-cell-padding: 0.5rem;\n  --calcite-internal-table-cell-font-size: var(--calcite-font-size--1);\n  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--2);\n}\n:host([scale=\"l\"]) {\n  --calcite-internal-table-cell-padding: 1rem;\n  --calcite-internal-table-cell-font-size: var(--calcite-font-size-0);\n  --calcite-internal-table-cell-font-size-secondary: var(--calcite-font-size--1);\n}\n\n:host {\n  @apply table;\n}\n\n.container {\n  max-inline-size: 100vw;\n  inline-size: 100%;\n}\n\n.table-container {\n  @apply overflow-x-auto whitespace-nowrap;\n}\n\n.table-container:not(.bordered) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\ntable {\n  @apply w-full border-collapse;\n  overflow-x: scroll;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  border-inline-start: 1px solid var(--calcite-color-border-3);\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\ntbody {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.table--fixed {\n  @apply table-fixed;\n}\n\n.bordered {\n  ::slotted(calcite-table-row) {\n    --calcite-table-row-border-color: var(--calcite-color-border-3);\n  }\n}\n\n.striped {\n  ::slotted(calcite-table-row:nth-child(2n + 1)) {\n    --calcite-table-row-background: var(--calcite-color-foreground-2);\n  }\n}\n.selection-actions {\n  @apply flex flex-row;\n  margin-inline-start: auto;\n}\n\n.selection-area {\n  @apply flex flex-row items-center;\n  padding-block: var(--calcite-internal-table-cell-padding);\n}\n\n.selection-area calcite-chip:last-of-type {\n  @apply me-2;\n}\n\n.selection-area calcite-chip:last-of-type:not(:first-of-type) {\n  @apply ms-2;\n}\n\n.selection-area calcite-button {\n  @apply me-4;\n}\n\n.pagination-area {\n  @apply flex flex-row w-full justify-center;\n  padding-block: var(--calcite-internal-table-cell-padding);\n}\n\ncalcite-pagination {\n  flex: 1;\n  justify-content: center;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  numberStringFormatter,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { TableLayout, TableRowFocusEvent } from \"./interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { TableMessages } from \"./assets/table/t9n\";\nimport { getUserAgentString } from \"../../utils/browser\";\n\n/**\n * @slot - A slot for adding `calcite-table-row` elements containing `calcite-table-cell` and/or `calcite-table-header` elements.\n * @slot table-header - A slot for adding `calcite-table-row` elements containing `calcite-table-header` elements.\n * @slot table-footer - A slot for adding `calcite-table-row` elements containing `calcite-table-cell` and/or `calcite-table-header` elements.\n * @slot selection-actions - A slot for adding a `calcite-action-bar` or other elements to display when `selectionMode` is not `\"none\"`.\n */\n\n@Component({\n  tag: \"calcite-table\",\n  styleUrl: \"table.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Table implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays borders in the component. */\n  @Prop({ reflect: true }) bordered = false;\n\n  /** Specifies an accessible title for the component. */\n  @Prop() caption!: string;\n\n  /** When `true`, number values are displayed with a group separator corresponding to the language and country format. */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /** Specifies the layout of the component. */\n  @Prop({ reflect: true }) layout: TableLayout = \"auto\";\n\n  /** When `true`, displays the position of the row in numeric form. */\n  @Prop({ reflect: true }) numbered = false;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem?: NumberingSystem;\n\n  /** Specifies the page size of the component. When `true`, renders `calcite-pagination` */\n  @Prop({ reflect: true }) pageSize = 0;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the selection mode of the component. */\n  @Prop({ reflect: true }) selectionMode: Extract<\"none\" | \"multiple\" | \"single\", SelectionMode> =\n    \"none\";\n\n  /**\n   * When `true`, displays striped styling in the component.\n   *\n   * @deprecated Use the `striped` property instead.\n   */\n  @Prop({ reflect: true }) zebra = false;\n\n  /** When `true`, displays striped styling in the component. */\n  @Prop({ reflect: true }) striped = false;\n\n  @Watch(\"groupSeparator\")\n  @Watch(\"numbered\")\n  @Watch(\"numberingSystem\")\n  @Watch(\"pageSize\")\n  @Watch(\"scale\")\n  @Watch(\"selectionMode\")\n  handleNumberedChange(): void {\n    this.updateRows();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTableRowElement[] = [];\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableElement;\n\n  @State() colCount = 0;\n\n  @State() pageStartRow = 1;\n\n  @State() selectedCount = 0;\n\n  /* Workaround for Safari https://bugs.webkit.org/show_bug.cgi?id=258430 https://bugs.webkit.org/show_bug.cgi?id=239478 */\n  // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n  @State() readCellContentsToAT: boolean;\n\n  @State() defaultMessages: TableMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private allRows: HTMLCalciteTableRowElement[];\n\n  private bodyRows: HTMLCalciteTableRowElement[];\n\n  private headRows: HTMLCalciteTableRowElement[];\n\n  private footRows: HTMLCalciteTableRowElement[];\n\n  private paginationEl: HTMLCalcitePaginationElement;\n\n  private tableBodySlotEl: HTMLSlotElement;\n\n  private tableHeadSlotEl: HTMLSlotElement;\n\n  private tableFootSlotEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.readCellContentsToAT = /safari/i.test(getUserAgentString());\n    this.updateRows();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Emits when the component's selected rows change. */\n  @Event({ cancelable: false }) calciteTableSelect: EventEmitter<void>;\n\n  /** Emits when the component's page selection changes. */\n  @Event({ cancelable: false }) calciteTablePageChange: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusChange: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteTableRowSelect\")\n  calciteChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(event.target as HTMLCalciteTableRowElement);\n    }\n  }\n\n  @Listen(\"calciteInternalTableRowFocusRequest\")\n  calciteInternalTableRowFocusEvent(event: TableRowFocusEvent): void {\n    const cellPosition = event[\"detail\"].cellPosition;\n    const rowPos = event[\"detail\"].rowPosition;\n    const destination = event[\"detail\"].destination;\n    const lastCell = event[\"detail\"].lastCell;\n\n    const visibleBody = this.bodyRows?.filter((row) => !row.hidden);\n    const visibleAll = this.allRows?.filter((row) => !row.hidden);\n\n    const lastHeadRow = this.headRows[this.headRows.length - 1]?.positionAll;\n    const firstBodyRow = visibleBody[0]?.positionAll;\n    const lastBodyRow = visibleBody[visibleBody.length - 1]?.positionAll;\n    const firstFootRow = this.footRows[0]?.positionAll;\n    const lastTableRow = visibleAll[visibleAll.length - 1]?.positionAll;\n\n    const leavingHeader = destination === \"next\" && rowPos === lastHeadRow;\n    const leavingFooter = destination === \"previous\" && rowPos === firstFootRow;\n    const enteringHeader = destination === \"previous\" && rowPos === firstBodyRow;\n    const enteringFooter = destination === \"next\" && rowPos === lastBodyRow;\n\n    let rowPosition: number;\n\n    switch (destination) {\n      case \"first\":\n        rowPosition = 0;\n        break;\n      case \"last\":\n        rowPosition = lastTableRow;\n        break;\n      case \"next\":\n        rowPosition = leavingHeader ? firstBodyRow : enteringFooter ? firstFootRow : rowPos + 1;\n        break;\n      case \"previous\":\n        rowPosition = leavingFooter ? lastBodyRow : enteringHeader ? lastHeadRow : rowPos - 1;\n        break;\n    }\n\n    const destinationCount = this.allRows?.find(\n      (row) => row.positionAll === rowPosition\n    )?.cellCount;\n\n    const adjustedPos = cellPosition > destinationCount ? destinationCount : cellPosition;\n\n    if (rowPosition !== undefined) {\n      this.calciteInternalTableRowFocusChange.emit({\n        cellPosition: adjustedPos,\n        rowPosition,\n        destination,\n        lastCell,\n      });\n    }\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getSlottedRows = (el: HTMLSlotElement): HTMLCalciteTableRowElement[] => {\n    return el\n      ?.assignedElements({ flatten: true })\n      ?.filter((el) => el?.matches(\"calcite-table-row\")) as HTMLCalciteTableRowElement[];\n  };\n\n  private updateRows = (): void => {\n    const headRows = this.getSlottedRows(this.tableHeadSlotEl) || [];\n    const bodyRows = this.getSlottedRows(this.tableBodySlotEl) || [];\n    const footRows = this.getSlottedRows(this.tableFootSlotEl) || [];\n    const allRows = [...headRows, ...bodyRows, ...footRows];\n\n    headRows?.forEach((row) => {\n      const position = headRows?.indexOf(row);\n      row.rowType = \"head\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    bodyRows?.forEach((row) => {\n      const position = bodyRows?.indexOf(row);\n      row.rowType = \"body\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    footRows?.forEach((row) => {\n      const position = footRows?.indexOf(row);\n      row.rowType = \"foot\";\n      row.positionSection = position;\n      row.positionSectionLocalized = this.localizeNumber((position + 1).toString());\n    });\n\n    allRows?.forEach((row) => {\n      row.selectionMode = this.selectionMode;\n      row.bodyRowCount = bodyRows?.length;\n      row.positionAll = allRows?.indexOf(row);\n      row.numbered = this.numbered;\n      row.scale = this.scale;\n      row.readCellContentsToAT = this.readCellContentsToAT;\n    });\n\n    const colCount =\n      headRows[0]?.cellCount || headRows[0]?.querySelectorAll(\"calcite-table-header\")?.length;\n\n    this.colCount = colCount;\n    this.headRows = headRows;\n    this.bodyRows = bodyRows;\n    this.footRows = footRows;\n    this.allRows = allRows;\n\n    this.updateSelectedItems();\n    this.paginateRows();\n  };\n\n  private handlePaginationChange = (): void => {\n    const requestedItem = this.paginationEl?.startItem;\n    this.pageStartRow = requestedItem || 1;\n    this.calciteTablePageChange.emit();\n    this.updateRows();\n  };\n\n  private paginateRows = (): void => {\n    this.bodyRows?.forEach((row) => {\n      const rowPos = row.positionSection + 1;\n      const inView = rowPos >= this.pageStartRow && rowPos < this.pageStartRow + this.pageSize;\n      row.hidden = this.pageSize > 0 && !inView && !this.footRows.includes(row);\n    });\n  };\n\n  private updateSelectedItems = (emit?: boolean): void => {\n    const selectedItems = this.bodyRows?.filter((el) => el.selected);\n    this.selectedItems = selectedItems;\n    this.selectedCount = selectedItems?.length;\n    this.allRows?.forEach((row) => {\n      row.selectedRowCount = this.selectedCount;\n      row.selectedRowCountLocalized = this.localizeNumber(this.selectedCount);\n    });\n    if (emit) {\n      this.calciteTableSelect.emit();\n    }\n  };\n\n  private handleDeselectAllRows = (): void => {\n    this.bodyRows?.forEach((row) => {\n      row.selected = false;\n    });\n    this.updateSelectedItems(true);\n  };\n\n  private setSelectedItems = (elToMatch?: HTMLCalciteTableRowElement): void => {\n    this.bodyRows?.forEach((el) => {\n      if (elToMatch?.rowType === \"head\") {\n        el.selected = this.selectedCount !== this.bodyRows?.length;\n      } else {\n        el.selected =\n          elToMatch === el ? !el.selected : this.selectionMode === \"multiple\" ? el.selected : false;\n      }\n    });\n    this.updateSelectedItems(true);\n  };\n\n  private localizeNumber = (value: number | string): string => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    return numberStringFormatter.localize(value.toString());\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelectionArea(): VNode {\n    const outOfViewCount = this.selectedItems?.filter((el) => el.hidden)?.length;\n    const localizedOutOfView = this.localizeNumber(outOfViewCount?.toString());\n    const localizedSelectedCount = this.localizeNumber(this.selectedCount?.toString());\n    const selectionText = `${localizedSelectedCount} ${this.messages.selected}`;\n    const outOfView = `${localizedOutOfView} ${this.messages.hiddenSelected}`;\n\n    return (\n      <div class={CSS.selectionArea}>\n        <calcite-chip\n          kind={this.selectedCount > 0 ? \"brand\" : \"neutral\"}\n          scale={this.scale}\n          value={selectionText}\n        >\n          {selectionText}\n        </calcite-chip>\n        {outOfViewCount > 0 && (\n          <calcite-chip icon=\"hide-empty\" scale={this.scale} title={outOfView} value={outOfView}>\n            {localizedOutOfView}\n          </calcite-chip>\n        )}\n        {this.selectedCount > 0 && (\n          <calcite-button\n            icon-start=\"x\"\n            kind=\"neutral\"\n            onClick={this.handleDeselectAllRows}\n            round\n            scale={this.scale}\n            title={`${this.messages.clear} ${selectionText} ${this.messages.row}`}\n          >\n            {this.messages.clear}\n          </calcite-button>\n        )}\n        <div class={CSS.selectionActions}>\n          <slot name={SLOTS.selectionActions} />\n        </div>\n      </div>\n    );\n  }\n\n  renderPaginationArea(): VNode {\n    return (\n      <div class={CSS.paginationArea}>\n        <calcite-pagination\n          groupSeparator={this.groupSeparator}\n          numberingSystem={this.numberingSystem}\n          onCalcitePaginationChange={this.handlePaginationChange}\n          pageSize={this.pageSize}\n          scale={this.scale}\n          startItem={1}\n          totalItems={this.bodyRows?.length}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el) => (this.paginationEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderTHead(): VNode {\n    return (\n      <thead>\n        <slot\n          name={SLOTS.tableHeader}\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableHeadSlotEl = el as HTMLSlotElement)}\n        />\n      </thead>\n    );\n  }\n\n  renderTBody(): VNode {\n    return (\n      <tbody>\n        <slot\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableBodySlotEl = el as HTMLSlotElement)}\n        />\n      </tbody>\n    );\n  }\n\n  renderTFoot(): VNode {\n    return (\n      <tfoot>\n        <slot\n          name={SLOTS.tableFooter}\n          onSlotchange={this.updateRows}\n          ref={(el) => (this.tableFootSlotEl = el as HTMLSlotElement)}\n        />\n      </tfoot>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <div class={CSS.container}>\n          {this.selectionMode !== \"none\" && this.renderSelectionArea()}\n          <div\n            class={{\n              [CSS.bordered]: this.bordered,\n              [CSS.striped]: this.striped || this.zebra,\n              [CSS.tableContainer]: true,\n            }}\n          >\n            <table\n              aria-colcount={this.colCount}\n              aria-multiselectable={this.selectionMode === \"multiple\"}\n              aria-readonly={true}\n              aria-rowcount={this.allRows?.length}\n              class={{ [CSS.tableFixed]: this.layout === \"fixed\" }}\n              role=\"grid\"\n            >\n              <caption class={CSS.assistiveText}>{this.caption}</caption>\n              {this.renderTHead()}\n              {this.renderTBody()}\n              {this.renderTFoot()}\n            </table>\n          </div>\n          {this.pageSize > 0 && this.renderPaginationArea()}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}