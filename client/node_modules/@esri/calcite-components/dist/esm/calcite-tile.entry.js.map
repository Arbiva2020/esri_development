{"file":"calcite-tile.entry.js","mappings":";;;;;;;;;;;;;;AAAO,MAAM,KAAK,GAAG;IACnB,YAAY,EAAE,eAAe;IAC7B,UAAU,EAAE,aAAa;CAC1B;;ACHD,MAAM,OAAO,GAAG,osFAAosF;;MCwBvsF,IAAI;;;sBAUmB,KAAK;;wBAUH,KAAK;qBAOR,KAAK;uBAOH,KAAK;;sBAMN,KAAK;;;2BAUA,KAAK;;;;;;;IAgB5C,iBAAiB;QACf,+BAA+B,CAAC,IAAI,CAAC,CAAC;QACtC,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,oBAAoB;QAClB,kCAAkC,CAAC,IAAI,CAAC,CAAC;QACzC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,kBAAkB;QAChB,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAC7B;;;;;;IAQD,UAAU;QACR,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QAC7D,MAAM,aAAa,GAAG,OAAO,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;QACtD,MAAM,SAAS,GAAG,aAAa;cAC3B;gBACE,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,MAAM;aACd;cACD,SAAS,CAAC;QAEd,QACE,WAAK,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAE,aAAa,EAAE,IAC3D,IAAI,KACH,WAAK,KAAK,EAAC,MAAM,IACf,oBAAc,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,GAAG,EAAC,KAAK,EAAE,SAAS,GAAI,CAC1E,CACP,EACD,WAAK,KAAK,EAAC,mBAAmB,IAC3B,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,IACjC,WAAK,KAAK,EAAC,wBAAwB,IACjC,YAAM,IAAI,EAAE,KAAK,CAAC,YAAY,GAAI,CAC9B,IACJ,IAAI,EACR,WAAK,KAAK,EAAC,SAAS,IACjB,OAAO,IAAI,WAAK,KAAK,EAAC,SAAS,IAAE,OAAO,CAAO,EAC/C,WAAW,IAAI,WAAK,KAAK,EAAC,aAAa,IAAE,WAAW,CAAO,CACxD,EACL,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,IAC/B,WAAK,KAAK,EAAC,wBAAwB,IACjC,YAAM,IAAI,EAAE,KAAK,CAAC,UAAU,GAAI,CAC5B,IACJ,IAAI,CACJ,CACF,EACN;KACH;IAED,MAAM;QACJ,QACE,EAAC,QAAQ,QACN,IAAI,CAAC,IAAI,IACR,oBAAc,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IACnD,IAAI,CAAC,UAAU,EAAE,CACL,KAEf,IAAI,CAAC,UAAU,EAAE,CAClB,CACQ,EACX;KACH;;;;;;;","names":[],"sources":["src/components/tile/resources.ts","src/components/tile/tile.scss?tag=calcite-tile&encapsulation=shadow","src/components/tile/tile.tsx"],"sourcesContent":["export const SLOTS = {\n  contentStart: \"content-start\",\n  contentEnd: \"content-end\",\n};\n",":host {\n  @apply bg-foreground-1\n    text-color-3\n    box-border\n    inline-block\n    select-none\n    duration-150\n    ease-in-out;\n\n  .container {\n    @apply pointer-events-none\n  grid\n  grid-cols-1\n  gap-2;\n  }\n\n  .content {\n    @apply flex\n  flex-auto\n  flex-col\n  justify-center\n  gap-2;\n    // set width handles slotted content and heading word wrap\n    inline-size: 10%;\n  }\n\n  .content-container {\n    @apply focus-base\n  text-color-2\n  flex\n  w-full\n  flex-auto\n  items-stretch\n  p-0;\n  }\n\n  .content-slot-container {\n    @apply bg-foreground-1 flex items-center;\n\n    &:first-child {\n      padding-inline: 0 0.75rem;\n    }\n\n    &:last-child {\n      padding-inline: 0.75rem 0;\n    }\n  }\n\n  .heading {\n    @apply text-n1-wrap\n    text-color-2\n    pointer-events-none\n    break-words\n    font-medium\n    duration-150\n    ease-in-out;\n  }\n  .large-visual {\n    @apply items-center\n      text-center;\n    min-block-size: theme(\"spacing.48\");\n    .icon {\n      @apply flex\n        justify-center\n        self-end;\n    }\n    .content-container {\n      @apply self-center;\n    }\n  }\n  .description {\n    @apply text-n2-wrap\n    text-color-3\n    break-words\n    pointer-events-none\n    duration-150\n    ease-in-out;\n  }\n}\n:host([href]),\n:host([href]:hover) {\n  .heading {\n    @apply underline;\n    color: var(--calcite-color-text-link);\n  }\n}\n:host(:not([embed])) {\n  @apply p-3;\n  box-shadow: 0 0 0 1px var(--calcite-color-border-2);\n}\n:host(:not([embed])[href]:hover) {\n  @apply cursor-pointer;\n  box-shadow: 0 0 0 2px var(--calcite-color-brand);\n}\n:host(:not([embed])[href]:active) {\n  box-shadow: 0 0 0 3px var(--calcite-color-brand);\n}\n:host([icon][heading]:not([description]):not([embed])) {\n  @apply p-0;\n}\n:host([icon][heading]:not([description])) {\n  .icon {\n    @apply flex justify-center;\n  }\n  .large-visual {\n    @apply text-center;\n  }\n}\n\n@include disabled();\n\n:host(:hover),\n:host([active]) {\n  .heading {\n    @apply text-color-1;\n  }\n  .description {\n    @apply text-color-2;\n  }\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot content-start - A slot for adding non-actionable elements before the component's content.\n * @slot content-end - A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-tile\",\n  styleUrl: \"tile.scss\",\n  shadow: true,\n})\nexport class Tile implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's embed mode.\n   *\n   * When `true`, renders without a border and padding for use by other components.\n   */\n  @Prop({ reflect: true }) embed = false;\n\n  /**\n   * The focused state of the component.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) focused = false;\n\n  /** The component header text, which displays between the icon and description. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** When `true`, the component is not displayed and is not focusable.  */\n  @Prop({ reflect: true }) hidden = false;\n\n  /** When embed is `\"false\"`, the URL for the component. */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTile(): VNode {\n    const { icon, el, heading, description, iconFlipRtl } = this;\n    const isLargeVisual = heading && icon && !description;\n    const iconStyle = isLargeVisual\n      ? {\n          height: \"64px\",\n          width: \"64px\",\n        }\n      : undefined;\n\n    return (\n      <div class={{ container: true, \"large-visual\": isLargeVisual }}>\n        {icon && (\n          <div class=\"icon\">\n            <calcite-icon flipRtl={iconFlipRtl} icon={icon} scale=\"l\" style={iconStyle} />\n          </div>\n        )}\n        <div class=\"content-container\">\n          {getSlotted(el, SLOTS.contentStart) ? (\n            <div class=\"content-slot-container\">\n              <slot name={SLOTS.contentStart} />\n            </div>\n          ) : null}\n          <div class=\"content\">\n            {heading && <div class=\"heading\">{heading}</div>}\n            {description && <div class=\"description\">{description}</div>}\n          </div>\n          {getSlotted(el, SLOTS.contentEnd) ? (\n            <div class=\"content-slot-container\">\n              <slot name={SLOTS.contentEnd} />\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.href ? (\n          <calcite-link disabled={this.disabled} href={this.href}>\n            {this.renderTile()}\n          </calcite-link>\n        ) : (\n          this.renderTile()\n        )}\n      </Fragment>\n    );\n  }\n}\n"],"version":3}