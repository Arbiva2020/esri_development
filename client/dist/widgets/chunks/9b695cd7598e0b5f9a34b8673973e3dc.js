"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_views_2d_engine_webgl_WGLContainer_js"],{

/***/ "./node_modules/@arcgis/core/chunks/vec4f32.js":
/*!*****************************************************!*\
  !*** ./node_modules/@arcgis/core/chunks/vec4f32.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "O": () => (/* binding */ l),
/* harmony export */   "U": () => (/* binding */ _),
/* harmony export */   "Z": () => (/* binding */ f),
/* harmony export */   "a": () => (/* binding */ n),
/* harmony export */   "b": () => (/* binding */ e),
/* harmony export */   "c": () => (/* binding */ t),
/* harmony export */   "d": () => (/* binding */ s),
/* harmony export */   "e": () => (/* binding */ c),
/* harmony export */   "f": () => (/* binding */ r),
/* harmony export */   "g": () => (/* binding */ i),
/* harmony export */   "h": () => (/* binding */ y),
/* harmony export */   "i": () => (/* binding */ w),
/* harmony export */   "j": () => (/* binding */ N),
/* harmony export */   "o": () => (/* binding */ o),
/* harmony export */   "u": () => (/* binding */ u),
/* harmony export */   "v": () => (/* binding */ O),
/* harmony export */   "z": () => (/* binding */ a)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function s(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function i(){return r(0,0,0,1)}const f=a(),l=o(),_=u(),y=s(),w=c(),N=i(),O=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:y,UNIT_Z:w,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:o,unitW:i,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:"Module"}));


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/brushes.js":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/brushes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "brushes": () => (/* binding */ w)
/* harmony export */ });
/* harmony import */ var _webgl_brushes_BrushBitmap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl/brushes/BrushBitmap.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js");
/* harmony import */ var _webgl_brushes_BrushClip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl/brushes/BrushClip.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js");
/* harmony import */ var _webgl_brushes_BrushOverlay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webgl/brushes/BrushOverlay.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js");
/* harmony import */ var _webgl_brushes_WGLBrushDotDensity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushDotDensity.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js");
/* harmony import */ var _webgl_brushes_WGLBrushHeatmap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushHeatmap.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js");
/* harmony import */ var _webgl_brushes_WGLBrushInfo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushInfo.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js");
/* harmony import */ var _webgl_brushes_WGLBrushPieChart_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushPieChart.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js");
/* harmony import */ var _webgl_brushes_WGLBrushStencil_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushStencil.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js");
/* harmony import */ var _webgl_brushes_WGLBrushVTLBackground_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLBackground.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js");
/* harmony import */ var _webgl_brushes_WGLBrushVTLCircle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLCircle.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js");
/* harmony import */ var _webgl_brushes_WGLBrushVTLFill_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLFill.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js");
/* harmony import */ var _webgl_brushes_WGLBrushVTLLine_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLLine.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js");
/* harmony import */ var _webgl_brushes_WGLBrushVTLSymbol_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./webgl/brushes/WGLBrushVTLSymbol.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushFill.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushLabel_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushLabel.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushLine_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushLine.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushMarker.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js");
/* harmony import */ var _webgl_brushes_WGLGeometryBrushText_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./webgl/brushes/WGLGeometryBrushText.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const w={marker:_webgl_brushes_WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_16__["default"],line:_webgl_brushes_WGLGeometryBrushLine_js__WEBPACK_IMPORTED_MODULE_15__["default"],fill:_webgl_brushes_WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_13__["default"],text:_webgl_brushes_WGLGeometryBrushText_js__WEBPACK_IMPORTED_MODULE_17__["default"],label:_webgl_brushes_WGLGeometryBrushLabel_js__WEBPACK_IMPORTED_MODULE_14__["default"],clip:_webgl_brushes_BrushClip_js__WEBPACK_IMPORTED_MODULE_1__["default"],stencil:_webgl_brushes_WGLBrushStencil_js__WEBPACK_IMPORTED_MODULE_7__["default"],bitmap:_webgl_brushes_BrushBitmap_js__WEBPACK_IMPORTED_MODULE_0__["default"],overlay:_webgl_brushes_BrushOverlay_js__WEBPACK_IMPORTED_MODULE_2__["default"],tileInfo:_webgl_brushes_WGLBrushInfo_js__WEBPACK_IMPORTED_MODULE_5__["default"],vtlBackground:_webgl_brushes_WGLBrushVTLBackground_js__WEBPACK_IMPORTED_MODULE_8__.WGLBrushVTLBackground,vtlFill:_webgl_brushes_WGLBrushVTLFill_js__WEBPACK_IMPORTED_MODULE_10__.WGLBrushVTLFill,vtlLine:_webgl_brushes_WGLBrushVTLLine_js__WEBPACK_IMPORTED_MODULE_11__.WGLBrushVTLLine,vtlCircle:_webgl_brushes_WGLBrushVTLCircle_js__WEBPACK_IMPORTED_MODULE_9__.WGLBrushVTLCircle,vtlSymbol:_webgl_brushes_WGLBrushVTLSymbol_js__WEBPACK_IMPORTED_MODULE_12__.WGLBrushVTLSymbol,dotDensity:_webgl_brushes_WGLBrushDotDensity_js__WEBPACK_IMPORTED_MODULE_3__["default"],heatmap:_webgl_brushes_WGLBrushHeatmap_js__WEBPACK_IMPORTED_MODULE_4__["default"],pieChart:_webgl_brushes_WGLBrushPieChart_js__WEBPACK_IMPORTED_MODULE_6__["default"]};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COLLISION_GRID_CELL_SIZE": () => (/* binding */ t),
/* harmony export */   "DECLUTTER_BUDGET": () => (/* binding */ c),
/* harmony export */   "DECLUTTER_TILES": () => (/* binding */ o),
/* harmony export */   "FADE_DURATION": () => (/* binding */ e)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o=!0,t=32,c=1.5,e=200;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RotationAlignment": () => (/* binding */ l),
/* harmony export */   "StyleDefinition": () => (/* binding */ f),
/* harmony export */   "StyleLayerType": () => (/* binding */ a),
/* harmony export */   "SymbolAnchor": () => (/* binding */ m),
/* harmony export */   "SymbolPlacement": () => (/* binding */ n),
/* harmony export */   "TextJustification": () => (/* binding */ u),
/* harmony export */   "TextTransform": () => (/* binding */ o),
/* harmony export */   "TextWritingMode": () => (/* binding */ p),
/* harmony export */   "TranslateAnchor": () => (/* binding */ r),
/* harmony export */   "Visibility": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../symbols/cim/enums.js */ "./node_modules/@arcgis/core/symbols/cim/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var a,i,n,l,u,m,o,r,p;!function(e){e[e.BACKGROUND=0]="BACKGROUND",e[e.FILL=1]="FILL",e[e.LINE=2]="LINE",e[e.SYMBOL=3]="SYMBOL",e[e.CIRCLE=4]="CIRCLE"}(a||(a={})),function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(i||(i={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(n||(n={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(l||(l={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(u||(u={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(m||(m={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(o||(o={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(r||(r={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(p||(p={}));class f{}f.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:_symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__.CapType.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:_symbols_cim_enums_js__WEBPACK_IMPORTED_MODULE_0__.JoinType.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},f.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:n.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:m.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:l.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:m.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:u.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:l.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:o.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[p.HORIZONTAL]}},f.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},f.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},f.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}},f.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP},"line-width":{type:"number",minimum:0,default:1}},f.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}},f.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},f.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:r.MAP}};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/reactiveUtils.js */ "./node_modules/@arcgis/core/core/reactiveUtils.js");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chunks/mat3f32.js */ "./node_modules/@arcgis/core/chunks/mat3f32.js");
/* harmony import */ var _DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DisplayObject.js */ "./node_modules/@arcgis/core/views/2d/engine/DisplayObject.js");
/* harmony import */ var _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Mesh2D.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a=t=>parseFloat(t)/100;class c extends _DisplayObject_js__WEBPACK_IMPORTED_MODULE_4__.DisplayObject{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=(0,_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_2__.watch)((()=>e.version),(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new c(t,e)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,e,r,s){const[i,o]=e.size;if("geometry"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===o||(this._lastWidth=i,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(e,this._clip),o=i.getIndexBuffer(t),a=i.getVertexBuffers(t);this._cache.mesh=i,this._cache.vao=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_6__.VertexArrayObject(t,r,s,a,o)}return this._cache.vao}_createTransforms(){return{dvs:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__.c)()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i="string"==typeof e.left?a(e.left)*r:e.left,o="string"==typeof e.right?a(e.right)*r:e.right,h="string"==typeof e.top?a(e.top)*s:e.top,c="string"==typeof e.bottom?a(e.bottom)*s:e.bottom,n=i,l=h;return{x:n,y:l,width:Math.max(r-o-n,0),height:Math.max(s-c-l,0)}}_createMesh(r,s){switch(s.type){case"rect":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromRect(this._createScreenRect(r,s));case"path":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromPath(s);case"geometry":return _Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromGeometry(r,s);default:return _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl.ClippingInfo").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),_Mesh2D_js__WEBPACK_IMPORTED_MODULE_5__["default"].fromRect({x:0,y:0,width:1,height:1})}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pos2b": () => (/* binding */ r),
/* harmony export */   "Pos2us": () => (/* binding */ m),
/* harmony export */   "PosTex2b": () => (/* binding */ t)
/* harmony export */ });
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../webgl/VertexElementDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/VertexElementDescriptor.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r={geometry:[new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_1__.VertexElementDescriptor("a_pos",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.DataType.BYTE,0,2)]},t={geometry:[new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_1__.VertexElementDescriptor("a_pos",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.DataType.BYTE,0,4),new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_1__.VertexElementDescriptor("a_tex",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.DataType.BYTE,2,4)]},m={geometry:[new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_1__.VertexElementDescriptor("a_pos",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.DataType.UNSIGNED_SHORT,0,4)]};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _chunks_earcut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chunks/earcut.js */ "./node_modules/@arcgis/core/chunks/earcut.js");
/* harmony import */ var _chunks_vec2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chunks/vec2.js */ "./node_modules/@arcgis/core/chunks/vec2.js");
/* harmony import */ var _chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../chunks/vec2f64.js */ "./node_modules/@arcgis/core/chunks/vec2f64.js");
/* harmony import */ var _layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../layers/graphics/featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../layers/graphics/OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const y=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return _webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.DataType.UNSIGNED_BYTE;case 2:return _webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.DataType.UNSIGNED_SHORT;case 4:return _webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.DataType.UNSIGNED_INT;default:throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("Cannot get DataType of array")}},l=(e,t,r,n)=>{let s=0;for(let o=1;o<r;o++){const r=e[2*(t+o-1)],n=e[2*(t+o-1)+1];s+=(e[2*(t+o)]-r)*(e[2*(t+o)+1]+n)}return n?s>0:s<0},x=({coords:e,lengths:t},n)=>{const s=[];for(let o=0,i=0;o<t.length;i+=t[o],o+=1){const c=i,a=[];for(;o<t.length-1&&l(e,i+t[o],t[o+1],n);o+=1,i+=t[o])a.push(i+t[o]-c);const f=e.slice(2*c,2*(i+t[o])),h=(0,_chunks_earcut_js__WEBPACK_IMPORTED_MODULE_2__.e)(f,a,2);for(const e of h)s.push(e+c)}return s};class g{constructor(e,t,r,n=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=n}static fromRect({x:e,y:t,width:r,height:n}){const s=e,o=t,i=s+r,c=o+n;return g.fromScreenExtent({xmin:s,ymin:o,xmax:i,ymax:c})}static fromPath(e){const t=(0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_5__.convertFromNestedArray)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"],e.path,!1,!1),r=t.coords,n=new Uint32Array(x(t,!0)),s=new Uint32Array(r.length/2);for(let o=0;o<s.length;o++)s[o]=(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(Math.floor(r[2*o]),Math.floor(r[2*o+1]));return new g({geometry:s},n,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.PrimitiveType.TRIANGLES)}static fromGeometry(r,n){const s=n.geometry?.type;switch(s){case"polygon":return g.fromPolygon(r,n.geometry);case"extent":return g.fromMapExtent(r,n.geometry);default:return _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl.Mesh2D").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-bad-type",`Unable to create a mesh from type ${s}`,n)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=(0,_layers_graphics_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_5__.convertFromPolygon)(new _layers_graphics_OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_6__["default"],t,!1,!1),o=r.coords,f=new Uint32Array(x(r,!1)),m=new Uint32Array(o.length/2),u=(0,_chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_4__.a)(),y=(0,_chunks_vec2f64_js__WEBPACK_IMPORTED_MODULE_4__.a)();for(let s=0;s<m.length;s++)(0,_chunks_vec2_js__WEBPACK_IMPORTED_MODULE_3__.s)(u,o[2*s],o[2*s+1]),e.toScreen(y,u),m[s]=(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(Math.floor(y[0]),Math.floor(y[1]));return new g({geometry:m},f,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.PrimitiveType.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:n}){const s={geometry:new Uint32Array([(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(e,r),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(t,r),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(e,n),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(e,n),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(t,r),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(t,n)])},o=new Uint32Array([0,1,2,3,4,5]);return new g(s,o,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.PrimitiveType.TRIANGLES)}static fromMapExtent(e,t){const[r,n]=e.toScreen([0,0],[t.xmin,t.ymin]),[s,o]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(r,n),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(s,n),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(r,o),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(r,o),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(s,n),(0,_number_js__WEBPACK_IMPORTED_MODULE_7__.i1616to32)(s,o)])},c=new Uint32Array([0,1,2,3,4,5]);return new g(i,c,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.PrimitiveType.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}get elementType(){return y(this.indices)}getIndexBuffer(e,t=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.Usage.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__.BufferObject.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_9__.Usage.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,n)=>({...r,[n]:_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_8__.BufferObject.createVertex(e,t,this.vertices[n])})),{})),this._cache.vertexBuffers}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/* harmony import */ var _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../webgl/VertexElementDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/VertexElementDescriptor.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class n{constructor(s,n){this._rctx=s,this._vertexBuffer=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_0__.BufferObject.createVertex(s,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.Usage.STATIC_DRAW,new Uint16Array(n)),this._vao=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_2__.VertexArrayObject(s,new Map([["a_position",0]]),{geometry:[new _webgl_VertexElementDescriptor_js__WEBPACK_IMPORTED_MODULE_3__.VertexElementDescriptor("a_position",2,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.DataType.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.PrimitiveType.TRIANGLE_STRIP,0,this._count)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../chunks/mat3f32.js */ "./node_modules/@arcgis/core/chunks/mat3f32.js");
/* harmony import */ var _brushes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../brushes.js */ "./node_modules/@arcgis/core/views/2d/engine/brushes.js");
/* harmony import */ var _Container_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Container.js */ "./node_modules/@arcgis/core/views/2d/engine/Container.js");
/* harmony import */ var _ClippingInfo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ClippingInfo.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class i extends _Container_js__WEBPACK_IMPORTED_MODULE_3__.Container{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo()}beforeRender(e){super.beforeRender(e),this.updateTransforms(e.state)}_createTransforms(){return{dvs:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__.c)()}}doRender(e){const r=this.createRenderParams(e),{painter:s,globalOpacity:t,profiler:i,drawPhase:a}=r,o=a===_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.LABEL||a===_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.HIGHLIGHT?1:t*this.computedOpacity;i.recordContainerStart(this.name),s.beforeRenderLayer(r,this._clippingInfos?255:0,o),this.renderChildren(r),s.compositeLayer(r,o),i.recordContainerEnd()}renderChildren(e){null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const s of this._renderPasses)try{s.render(e)}catch(r){}}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:"clip",brushes:[_brushes_js__WEBPACK_IMPORTED_MODULE_2__.brushes.clip],target:()=>this._clippingInfos,drawPhase:_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.MAP|_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.LABEL|_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.LABEL_ALPHA|_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.DEBUG|_enums_js__WEBPACK_IMPORTED_MODULE_5__.WGLDrawPhase.HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){null!=this._clippingInfos&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null);const e=this.stage;if(!e)return;const r=this._clips;null!=r&&r.length&&(this._clippingInfos=r.items.map((r=>_ClippingInfo_js__WEBPACK_IMPORTED_MODULE_4__["default"].fromClipArea(e,r)))),this.requestRender()}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../VertexStream.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a={nearest:{defines:[],samplingMode:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.TextureSamplingMode.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.TextureSamplingMode.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.TextureSamplingMode.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if("dynamic"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?a.bilinear:a.nearest}return a[i.samplingMode]};class d extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_pos",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(i,s){const{context:a,renderingOptions:d,painter:l,requestRender:m,allowDelayedRender:c}=i;if(!s.source||!s.isReady)return;const p=o(i,s,d),u=l.materialManager.getProgram(this._desc,p.defines);if(c&&null!=m&&!u.compiled)return void m();i.timeline.begin(this.name),"additive"===s.blendFunction?a.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE):a.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA),a.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.CompareFunction.EQUAL,s.stencilRef,255),this._quad||(this._quad=new _VertexStream_js__WEBPACK_IMPORTED_MODULE_1__["default"](a,[0,0,1,0,0,1,1,1]));const{coordScale:f,computedOpacity:_,transforms:E}=s;s.setSamplingProfile(p),s.bind(i.context,_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_BITMAP),a.useProgram(u),u.setUniformMatrix3fv("u_dvsMat3",E.dvs),u.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_BITMAP),u.setUniform2fv("u_coordScale",f),u.setUniform1f("u_opacity",_),this._quad.draw(),i.timeline.end(this.name)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "./node_modules/@arcgis/core/chunks/vec4f32.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/ProgramTemplate.js */ "./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const l=()=>(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT}]});class p extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._color=(0,_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__.f)(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.StencilOperation.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.StencilOperation.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.StencilOperation.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.CompareFunction.ALWAYS,0,255)}draw(e,r){const{context:t,state:o,requestRender:a,allowDelayedRender:p}=e,c=l(),d=r.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=(0,_webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_5__.createProgram)(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__.background)),!p||null==a||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",o.displayMat3),t.bindVAO(d),t.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,d.indexBuffer.size,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,0),t.bindVAO()):a())}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ u)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i=()=>(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)("overlay",{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.FLOAT}],tex:[{location:1,name:"a_uv",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.UNSIGNED_SHORT}]});class u extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._desc={vsPath:"overlay/overlay",fsPath:"overlay/overlay",attributes:new Map([["a_pos",0],["a_uv",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.CompareFunction.GREATER,255,255)}draw(t,r){const{context:s,painter:n,requestRender:a,allowDelayedRender:u}=t;if(!r.isReady)return;const{computedOpacity:c,dvsMat3:l,isWrapAround:d,perspectiveTransform:m,texture:p}=r;t.timeline.begin(this.name);const f=n.materialManager.getProgram(this._desc);if(u&&null!=a&&!f.compiled)return void a();const _=i(),v=r.getVAO(s,_.bufferLayouts,_.attributes);if(!v)return;s.bindVAO(v),s.useProgram(f),s.bindTexture(p,_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_BITMAP),f.setUniformMatrix3fv("u_dvsMat3",l),f.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_BITMAP),f.setUniform1f("u_opacity",c),f.setUniform2fv("u_perspective",m);const y=d?10:4;s.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.PrimitiveType.TRIANGLE_STRIP,0,y),s.bindVAO(),t.timeline.end(this.name)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t{constructor(){this.name=this.constructor.name||"UnnamedBrush",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/RandomLCG.js */ "./node_modules/@arcgis/core/core/RandomLCG.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WGLGeometryBrushFill.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js");
/* harmony import */ var _techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "./node_modules/@arcgis/core/views/webgl/FramebufferObject.js");
/* harmony import */ var _webgl_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../webgl/Renderbuffer.js */ "./node_modules/@arcgis/core/views/webgl/Renderbuffer.js");
/* harmony import */ var _webgl_RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../webgl/RenderbufferDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/RenderbufferDescriptor.js");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../webgl/Texture.js */ "./node_modules/@arcgis/core/views/webgl/Texture.js");
/* harmony import */ var _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../webgl/TextureDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/TextureDescriptor.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class g extends _WGLGeometryBrushFill_js__WEBPACK_IMPORTED_MODULE_4__["default"]{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([_definitions_js__WEBPACK_IMPORTED_MODULE_2__.TEXTURE_BINDING_RENDERER_0,_definitions_js__WEBPACK_IMPORTED_MODULE_2__.TEXTURE_BINDING_RENDERER_1]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__.disposeMaybe)(this._dotFBO),this._dotVAO=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_0__.disposeMaybe)(this._dotVAO)}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLGeometryType.FILL}supportsSymbology(e){return e===_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLSymbologyType.DOT_DENSITY}_drawFills(e,t,o,r,s,i){const{passOptions:n}=e;if(null!=n&&"hittest"===n.type)super._drawFills(e,t,o,r,s,i);else{const r=this._drawDotLocations(e,t,o,s,i);this._drawDotDensity(e,t,r)}}_drawDotDensity(e,t,o){const{context:r,painter:s,rendererInfo:i,requestRender:n,allowDelayedRender:d}=e,l=s.materialManager.getProgram(this._dotDesc);if(d&&null!=n&&!l.compiled)return void n();const{rendererSchema:m}=i;(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__.assertRendererSchema)(m,"dot-density");const c=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.DataType.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(l),l.setUniform1f("u_tileZoomFactor",1),l.setUniform1i("u_texture",this._dotSamplers[0]),l.setUniform1f("u_dotSize",Math.max(m.dotSize,1)),l.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(l,e,t),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(c),r.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.PrimitiveType.POINTS,0,262144)}_drawDotLocations(e,t,o,r,i){const{context:n,rendererInfo:d,requiredLevel:l}=e,m=n.getViewport(),{rendererSchema:c}=d;(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__.assertRendererSchema)(c,"dot-density");const{dotScale:f,colors:h,activeDots:p,backgroundColor:T,dotValue:x}=c;n.setViewport(0,0,512,512);const w=n.getBoundFramebufferObject(),D=this._createFBO(n);n.bindFramebuffer(D),n.setClearColor(0,0,0,0),n.clear(n.gl.COLOR_BUFFER_BIT|n.gl.STENCIL_BUFFER_BIT),n.setStencilTestEnabled(!1);const y=1/2**(l-t.key.level),b=_definitions_js__WEBPACK_IMPORTED_MODULE_2__.TILE_SIZE,g=b*window.devicePixelRatio*b*window.devicePixelRatio,O=1/y*(1/y),S=f?e.state.scale/f:1;return o.setUniform1f("u_tileZoomFactor",y),o.setUniform1f("u_tileDotsOverArea",g/(_definitions_js__WEBPACK_IMPORTED_MODULE_2__.TILE_SIZE*window.devicePixelRatio*_definitions_js__WEBPACK_IMPORTED_MODULE_2__.TILE_SIZE*window.devicePixelRatio)),o.setUniformMatrix4fv("u_dotColors",h),o.setUniform4fv("u_isActive",p),o.setUniform4fv("u_dotBackgroundColor",T),o.setUniform1f("u_dotValue",Math.max(1,x*S*O)),this._bindDotDensityTextures(n,o,d,b),n.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.PrimitiveType.TRIANGLES,r,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.DataType.UNSIGNED_INT,i),n.setViewport(m.x,m.y,m.width,m.height),n.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(null==this._dotFBO){const t=512,o=512,r=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_12__.TextureDescriptor(t,o);r.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureSamplingMode.NEAREST,r.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureWrapMode.CLAMP_TO_EDGE;const s=new _webgl_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_9__.Renderbuffer(e,new _webgl_RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_10__.RenderbufferDescriptor(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.RenderbufferFormat.DEPTH_STENCIL,t,o));this._dotFBO=new _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_8__.FramebufferObject(e,r,s)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__.assertRendererSchema)(s,"dot-density");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,o){if(null==this._dotVAO){const r=2,s=new Int16Array(262144*r);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[r*(t+512*e)]=t,s[r*(t+512*e)+1]=e;const i=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_6__.BufferObject.createVertex(e,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.Usage.STATIC_DRAW,s);this._dotVAO=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_13__.VertexArrayObject(e,t,o,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,o,r){if(this._dotTextureSize===o&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=o,this._seed=r),null===this._dotTextures){const s=new _core_RandomLCG_js__WEBPACK_IMPORTED_MODULE_1__["default"](r);this._dotTextures=[this._allocDotDensityTexture(e,o,s),this._allocDotDensityTexture(e,o,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();const s=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_12__.TextureDescriptor;return s.dataType=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.PixelType.FLOAT,s.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_7__.TextureSamplingMode.NEAREST,s.width=t,s.height=t,new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_11__.Texture(e,s,r)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ E)
/* harmony export */ });
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _VertexStream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../VertexStream.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js");
/* harmony import */ var _WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WGLGeometryBrushMarker.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js");
/* harmony import */ var _effects_Effect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../effects/Effect.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js");
/* harmony import */ var _techniques_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _webgl_contextUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/contextUtils.js */ "./node_modules/@arcgis/core/views/webgl/contextUtils.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../webgl/FramebufferObject.js */ "./node_modules/@arcgis/core/views/webgl/FramebufferObject.js");
/* harmony import */ var _webgl_heatmapTextureUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../webgl/heatmapTextureUtils.js */ "./node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js");
/* harmony import */ var _webgl_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../webgl/Renderbuffer.js */ "./node_modules/@arcgis/core/views/webgl/Renderbuffer.js");
/* harmony import */ var _webgl_RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../webgl/RenderbufferDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/RenderbufferDescriptor.js");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../webgl/Texture.js */ "./node_modules/@arcgis/core/views/webgl/Texture.js");
/* harmony import */ var _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../webgl/TextureDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/TextureDescriptor.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const T=_core_Logger_js__WEBPACK_IMPORTED_MODULE_0__["default"].getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap");function v(e){return"heatmap"===e.type}function B(e,t){const{referenceScale:r,radius:i}=e;return i*(0!==r?r/t.scale:1)}class E extends _WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_4__["default"]{constructor(){super(...arguments),this.brushEffect=new G}supportsSymbology(e){return e===_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLSymbologyType.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:s}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...s]:s)}_drawMarkers(e,t,r,i,s,a,n){const{context:f,rendererInfo:c,state:h}=e,{rendererSchema:m}=c;(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_6__.assertRendererSchema)(m,"heatmap");const{isFieldActive:p}=m;r.setUniform1f("u_radius",B(m,h)),n||(r.setUniform1f("u_isFieldActive",p),f.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.CompareFunction.GEQUAL,t.stencilRef,255)),f.drawElements(i,s,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.DataType.UNSIGNED_INT,a)}}const O={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])},x=.25,y=1/(2*x);function P(e){return e<y?1:x}class G extends _effects_Effect_js__WEBPACK_IMPORTED_MODULE_5__.Effect{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__.disposeMaybe)(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__.disposeMaybe)(this._accumulateFramebuffer),this._resolveGradientTexture=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__.disposeMaybe)(this._resolveGradientTexture),this._tileQuad=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__.disposeMaybe)(this._tileQuad)}bind(e){const{context:t,rendererInfo:r,passOptions:i,state:s}=e,{rendererSchema:a}=r;!(null!=i&&"hittest"===i.type)&&v(a)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_6__.assertRendererSchema)(a,"heatmap"),this._loadResources(e),this._updateResources(t,a,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.BlendFactor.ONE),t.setClearColor(0,0,0,0),t.clear(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.ClearBufferBit.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:r,rendererInfo:i,passOptions:s}=e,{rendererSchema:a}=i;if(null!=s&&"hittest"===s.type||!v(a))return;const{defines:u}=this.loadQualityProfile(t),n=r.materialManager.getProgram(O,u);t.useProgram(n),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:o,minDensity:l,densityRange:c}=a;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),n.setUniform1i("u_texture",8),n.setUniform1i("u_gradient",9),n.setUniform2f("u_densityMinAndInvRange",l,1/c),n.setUniform1f("u_densityNormalization",3/(o*o*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:s,pixelFormat:a,internalFormat:u,requiresSharedStencilBuffer:n}=this.loadQualityProfile(e),{width:o,height:l}=this._prevViewport,f=o*x,c=l*x;let p=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_14__.TextureDescriptor(f,c);p.pixelFormat=a,p.internalFormat=u,p.dataType=r,p.samplingMode=s,p.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,n||(this._accumulateOutputStencilBuffer??=new _webgl_Renderbuffer_js__WEBPACK_IMPORTED_MODULE_11__.Renderbuffer(e,new _webgl_RenderbufferDescriptor_js__WEBPACK_IMPORTED_MODULE_12__.RenderbufferDescriptor(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.RenderbufferFormat.DEPTH_STENCIL,f,c))),this._accumulateFramebuffer??=new _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__.FramebufferObject(e,p,n?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer),p=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_14__.TextureDescriptor,p.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,this._resolveGradientTexture??=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_13__.Texture(e,p),this._tileQuad??=new _VertexStream_js__WEBPACK_IMPORTED_MODULE_3__["default"](e,[0,0,1,0,0,1,1,1])}_updateResources(e,t,r){const{gradientHash:i,gradient:s}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(s.length/4,1),this._resolveGradientTexture.setData(s),this._prevGradientHash=i);const{requiresSharedStencilBuffer:a}=this.loadQualityProfile(e),u=a?1:P(B(t,r)),{width:n,height:o}=this._prevViewport,l=n*u,f=o*u,{width:h,height:m}=this._accumulateFramebuffer;if(h!==l||m!==f){const e=this._accumulateFramebuffer.depthStencilAttachment;if(a&&null!=e){const{width:t,height:r}=e.descriptor;t===l&&r===f||(T.errorOnce("Attempted to resize shared stencil buffer! Detaching instead."),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(l,f)}a||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.ClearBufferBit.STENCIL_BUFFER_BIT,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.NEAREST)}loadQualityProfile(e){if(null==this._qualityProfile){const t=(0,_webgl_heatmapTextureUtils_js__WEBPACK_IMPORTED_MODULE_10__.loadHeatmapTextureConfiguration)(e,T),r=e.type===_webgl_contextUtils_js__WEBPACK_IMPORTED_MODULE_7__.ContextType.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,defines:t.dataType!==_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PixelType.FLOAT?["heatmapPrecisionHalfFloat"]:[]}}return this._qualityProfile}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "./node_modules/@arcgis/core/chunks/vec4f32.js");
/* harmony import */ var _DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DefaultVertexAttributeLayouts.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js");
/* harmony import */ var _shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shaders/TileInfoPrograms.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/ProgramTemplate.js */ "./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/Texture.js */ "./node_modules/@arcgis/core/views/webgl/Texture.js");
/* harmony import */ var _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../webgl/TextureDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/TextureDescriptor.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/* harmony import */ var _webgl_capabilities_isWebGL2Context_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../webgl/capabilities/isWebGL2Context.js */ "./node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const h=300,b=32;class p extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._color=(0,_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__.f)(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.BlendFactor.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r,requestRender:i,allowDelayedRender:s}=t;if(!e.isReady)return;if(this._loadWGLResources(r),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),r.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.PrimitiveType.LINE_STRIP,0,4);const o=this._getTexture(r,e);o?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",o.descriptor.width,o.descriptor.height),r.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.PrimitiveType.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=(0,_webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_7__.createProgram)(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__.background),n=(0,_webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_7__.createProgram)(t,_shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_4__.tileInfo),a=new Int8Array([0,0,1,0,1,1,0,1]),u=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_5__.BufferObject.createVertex(t,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.Usage.STATIC_DRAW,a),m=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_10__.VertexArrayObject(t,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__.background.attributes,_DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__.Pos2b,{geometry:u}),_=new Int8Array([0,0,1,0,0,1,1,1]),c=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_5__.BufferObject.createVertex(t,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.Usage.STATIC_DRAW,_),d=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_10__.VertexArrayObject(t,_shaders_TileInfoPrograms_js__WEBPACK_IMPORTED_MODULE_4__.tileInfo.attributes,_DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__.Pos2b,{geometry:c});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=d}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","tileCanvas2d"),this._canvas.setAttribute("width",`${h}`),this._canvas.setAttribute("height",`${b}`),this._canvas.setAttribute("style","display:none"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext("2d");o.font="24px sans-serif",o.textAlign="left",o.textBaseline="top",o.clearRect(0,0,h,b),r>1e5?(o.fillStyle="red",o.fillRect(0,0,h,b),o.fillStyle="black"):(o.clearRect(0,0,h,b),o.fillStyle="blue"),o.fillText(i,0,0);const n=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_9__.TextureDescriptor;return n.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.TextureWrapMode.CLAMP_TO_EDGE,n.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.TextureSamplingMode.NEAREST,n.isImmutable=(0,_webgl_capabilities_isWebGL2Context_js__WEBPACK_IMPORTED_MODULE_11__["default"])(t.gl),e.texture=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_8__.Texture(t,n,s),e.texture}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WGLGeometryBrushMarker.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js");
/* harmony import */ var _techniques_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s extends _WGLGeometryBrushMarker_js__WEBPACK_IMPORTED_MODULE_1__["default"]{supportsSymbology(r){return r===_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLSymbologyType.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_2__.assertRendererSchema)(a,"pie-chart"),s.setUniform4fv("u_colors",a.colors),s.setUniform4fv("u_defaultColor",a.defaultColor),s.setUniform4fv("u_othersColor",a.othersColor),s.setUniform4fv("u_outlineColor",a.outlineColor),s.setUniform1f("u_donutRatio",a.holePercentage),s.setUniform1f("u_sectorThreshold",a.sectorThreshold),s.setUniform1f("u_outlineWidth",a.outlineWidth),i.drawElements(n,l,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.UNSIGNED_INT,f)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "./node_modules/@arcgis/core/chunks/vec4f32.js");
/* harmony import */ var _DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DefaultVertexAttributeLayouts.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shaders/BackgroundPrograms.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/ProgramTemplate.js */ "./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class c extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{constructor(){super(...arguments),this._color=(0,_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_0__.f)(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.StencilOperation.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.StencilOperation.KEEP,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.StencilOperation.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:s,allowDelayedRender:i}=e;this._initialized||this._initialize(t),!i||null==s||this._solidProgram.compiled?(t.setStencilFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.Face.FRONT_AND_BACK,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.CompareFunction.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",r.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),t.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLE_STRIP,0,4),t.bindVAO()):s()}_initialize(e){if(this._initialized)return!0;const t=(0,_webgl_ProgramTemplate_js__WEBPACK_IMPORTED_MODULE_6__.createProgram)(e,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__.background);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_4__.BufferObject.createVertex(e,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.Usage.STATIC_DRAW,o),l=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_7__.VertexArrayObject(e,_shaders_BackgroundPrograms_js__WEBPACK_IMPORTED_MODULE_3__.background.attributes,_DefaultVertexAttributeLayouts_js__WEBPACK_IMPORTED_MODULE_1__.Pos2b,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WGLBrushVTLBackground": () => (/* binding */ _)
/* harmony export */ });
/* harmony import */ var _core_mathUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/mathUtils.js */ "./node_modules/@arcgis/core/core/mathUtils.js");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../chunks/mat3f32.js */ "./node_modules/@arcgis/core/chunks/mat3f32.js");
/* harmony import */ var _chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../chunks/vec4f32.js */ "./node_modules/@arcgis/core/chunks/vec4f32.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../webgl/BufferObject.js */ "./node_modules/@arcgis/core/views/webgl/BufferObject.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../webgl/VertexArrayObject.js */ "./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class _ extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_6__["default"]{constructor(){super(...arguments),this._color=(0,_chunks_vec4f32_js__WEBPACK_IMPORTED_MODULE_2__.f)(1,0,0,1),this._patternMatrix=(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_1__.c)(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:n,painter:c,styleLayerUID:u,requestRender:p,allowDelayedRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=c.vectorTilesMaterialManager,y=h.getPaintValue("background-color",d),b=h.getPaintValue("background-opacity",d),x=h.getPaintValue("background-pattern",d),M=void 0!==x,j=y[3]*b,U=1|window.devicePixelRatio,w=e.spriteMosaic;let L,A;const P=U>_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_HIGH_RES_CUTOFF?2:1,I=e.drawPhase===_enums_js__WEBPACK_IMPORTED_MODULE_4__.WGLDrawPhase.HITTEST,R=this._programOptions;R.id=I,R.pattern=M;const k=v.getMaterialProgram(n,g,R);if(!_||null==p||k.compiled){if(n.bindVAO(this._vao),n.useProgram(k),M){const t=w.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;L=r[0]-e[0],A=r[1]-e[1];const s=w.getPageSize(i);null!=s&&(w.bind(n,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.LINEAR,i,_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_SPRITES),k.setUniform4f("u_tlbr",e[0],e[1],r[0],r[1]),k.setUniform2fv("u_mosaicSize",s),k.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_SPRITES))}k.setUniform1f("u_opacity",b)}else this._color[0]=j*y[0],this._color[1]=j*y[1],this._color[2]=j*y[2],this._color[3]=j,k.setUniform4fv("u_color",this._color);if(k.setUniform1f("u_depth",h.z||0),I){const t=(0,_number_js__WEBPACK_IMPORTED_MODULE_5__.u32to4Xu8)(u+1);k.setUniform4fv("u_id",t)}for(const e of r){if(k.setUniform1f("u_coord_range",e.rangeX),k.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),M){const r=Math.max(2**(Math.round(d)-e.key.level),1),o=P*e.width*r,i=o/(0,_core_mathUtils_js__WEBPACK_IMPORTED_MODULE_0__.nextPowerOfTwo)(L),s=o/(0,_core_mathUtils_js__WEBPACK_IMPORTED_MODULE_0__.nextPowerOfTwo)(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.CompareFunction.EQUAL,0,255),n.drawArrays(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PrimitiveType.TRIANGLE_STRIP,0,4)}}else p()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=_webgl_BufferObject_js__WEBPACK_IMPORTED_MODULE_7__.BufferObject.createVertex(e,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.Usage.STATIC_DRAW,i),a=new _webgl_VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_9__.VertexArrayObject(e,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WGLBrushVTLCircle": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vectorTiles/style/StyleDefinition.js */ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class o extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,o){const{context:l,displayLevel:c,requiredLevel:u,state:d,drawPhase:f,painter:m,spriteMosaic:p,styleLayerUID:y,requestRender:v,allowDelayedRender:g}=i;if(!o.some((e=>e.layerData.get(y)?.circleIndexCount??!1)))return;const E=i.styleLayer,M=E.circleMaterial,T=m.vectorTilesMaterialManager,I=1.2,U=E.getPaintValue("circle-translate",c),_=E.getPaintValue("circle-translate-anchor",c),x=f===_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLDrawPhase.HITTEST,R=this._programOptions;R.id=x;const h=T.getMaterialProgram(l,M,R);if(g&&null!=v&&!h.compiled)return void v();l.useProgram(h),h.setUniformMatrix3fv("u_displayMat3",_===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__.TranslateAnchor.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv("u_circleTranslation",U),h.setUniform1f("u_depth",E.z),h.setUniform1f("u_antialiasingWidth",I);let D=-1;if(x){const e=(0,_number_js__WEBPACK_IMPORTED_MODULE_2__.u32to4Xu8)(y+1);h.setUniform4fv("u_id",e)}for(const e of o){if(!e.layerData.has(y))continue;e.key.level!==D&&(D=e.key.level,M.setDataUniforms(h,c,E,D,p));const t=e.layerData.get(y);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const r=t.vao;null!=r&&(l.bindVAO(r),h.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),u!==e.key.level?l.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.CompareFunction.EQUAL,e.stencilRef,255):l.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.CompareFunction.GREATER,255,255),l.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,t.circleIndexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WGLBrushVTLFill": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vectorTiles/style/StyleDefinition.js */ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const u=1/65536;class d extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_4__["default"]{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:l,spriteMosaic:o,styleLayerUID:s}=t;let f=!1;for(const n of e)if(n.layerData.has(s)){const t=n.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty("fill-pattern"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=o.getMosaicItemPosition(t,!0)}const y=!c&&u.getPaintValue("fill-antialias",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty("fill-color"),e=u.getPaintProperty("fill-opacity");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue("fill-color",i);_=u.getPaintValue("fill-opacity",i)*t[3],_>=1&&(g=!1)}}if(g&&"opaque"===l)return;let E;r===_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLDrawPhase.HITTEST&&(E=(0,_number_js__WEBPACK_IMPORTED_MODULE_3__.u32to4Xu8)(s+1));const v=u.getPaintValue("fill-translate",i),M=u.getPaintValue("fill-translate-anchor",i);(g||"translucent"!==l)&&this._drawFill(t,s,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&"opaque"!==l&&!P&&this._drawOutline(t,s,u,e,v,M,E)}_drawFill(a,r,d,c,m,p,y,g,_,E){if(y&&!_&&null==g)return;const{context:v,displayLevel:M,state:P,drawPhase:I,painter:T,pixelRatio:U,spriteMosaic:x,requestRender:D,allowDelayedRender:h}=a,S=d.fillMaterial,R=T.vectorTilesMaterialManager,w=U>_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_HIGH_RES_CUTOFF?2:1,N=I===_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLDrawPhase.HITTEST,L=this._fillProgramOptions;L.id=N,L.pattern=y;const A=R.getMaterialProgram(v,S,L);if(h&&null!=D&&!A.compiled)return void D();if(v.useProgram(A),null!=g){const{page:t}=g,i=x.getPageSize(t);null!=i&&(x.bind(v,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,t,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),A.setUniform2fv("u_mosaicSize",i),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES))}A.setUniformMatrix3fv("u_displayMat3",p===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__.TranslateAnchor.VIEWPORT?P.displayMat3:P.displayViewMat3),A.setUniform2fv("u_fillTranslation",m),A.setUniform1f("u_depth",d.z+u),N&&A.setUniform4fv("u_id",E);let V=-1;for(const t of c){if(!t.layerData.has(r))continue;t.key.level!==V&&(V=t.key.level,S.setDataUniforms(A,M,d,V,x));const i=t.layerData.get(r);if(!i.fillIndexCount)continue;i.prepareForRendering(v);const n=i.fillVAO;if(null!=n){if(v.bindVAO(n),A.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),v.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.CompareFunction.EQUAL,t.stencilRef,255),y){const e=Math.max(2**(Math.round(M)-t.key.level),1),i=t.rangeX/(w*t.width*e);A.setUniform1f("u_patternFactor",i)}if(_){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=x.getPageSize(i);null!=t&&(x.bind(v,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,i,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),A.setUniform2fv("u_mosaicSize",t),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),v.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,n[1],_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else v.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,i.fillIndexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,d,c){const{context:m,displayLevel:p,state:y,drawPhase:g,painter:_,pixelRatio:E,spriteMosaic:v,requestRender:M,allowDelayedRender:P}=e,I=a.outlineMaterial,T=_.vectorTilesMaterialManager,U=.75/E,x=g===_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLDrawPhase.HITTEST,D=this._outlineProgramOptions;D.id=x;const h=T.getMaterialProgram(m,I,D);if(P&&null!=M&&!h.compiled)return void M();m.useProgram(h),h.setUniformMatrix3fv("u_displayMat3",d===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__.TranslateAnchor.VIEWPORT?y.displayMat3:y.displayViewMat3),h.setUniform2fv("u_fillTranslation",l),h.setUniform1f("u_depth",a.z+u),h.setUniform1f("u_outline_width",U),x&&h.setUniform4fv("u_id",c);let S=-1;for(const t of r){if(!t.layerData.has(i))continue;t.key.level!==S&&(S=t.key.level,I.setDataUniforms(h,p,a,S,v));const e=t.layerData.get(i);if(e.prepareForRendering(m),!e.outlineIndexCount)continue;const n=e.outlineVAO;null!=n&&(m.bindVAO(n),h.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),m.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.CompareFunction.EQUAL,t.stencilRef,255),m.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,e.outlineIndexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WGLBrushVTLLine": () => (/* binding */ f)
/* harmony export */ });
/* harmony import */ var _vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vectorTiles/style/StyleDefinition.js */ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class f extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_4__["default"]{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(a,f){const{context:u,displayLevel:m,state:d,drawPhase:c,painter:p,pixelRatio:g,spriteMosaic:y,styleLayerUID:E,requestRender:v,allowDelayedRender:M}=a;if(!f.some((e=>e.layerData.get(E)?.lineIndexCount??!1)))return;const _=a.styleLayer,U=_.lineMaterial,I=p.vectorTilesMaterialManager,P=_.getPaintValue("line-translate",m),T=_.getPaintValue("line-translate-anchor",m),x=_.getPaintProperty("line-pattern"),D=void 0!==x,S=D&&x.isDataDriven;let L,N;if(D&&!S){const e=x.getValue(m);L=y.getMosaicItemPosition(e)}let R=!1;if(!D){const e=_.getPaintProperty("line-dasharray");if(N=void 0!==e,R=N&&e.isDataDriven,N&&!R){const t=e.getValue(m),i=_.getDashKey(t,_.getLayoutValue("line-cap",m));L=y.getMosaicItemPosition(i)}}const V=1/g,h=c===_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLDrawPhase.HITTEST,w=this._programOptions;w.id=h,w.pattern=D,w.sdf=N;const A=I.getMaterialProgram(u,U,w);if(M&&null!=v&&!A.compiled)return void v();if(u.useProgram(A),A.setUniformMatrix3fv("u_displayViewMat3",d.displayViewMat3),A.setUniformMatrix3fv("u_displayMat3",T===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_0__.TranslateAnchor.VIEWPORT?d.displayMat3:d.displayViewMat3),A.setUniform2fv("u_lineTranslation",P),A.setUniform1f("u_depth",_.z),A.setUniform1f("u_antialiasing",V),h){const e=(0,_number_js__WEBPACK_IMPORTED_MODULE_3__.u32to4Xu8)(E+1);A.setUniform4fv("u_id",e)}if(L&&null!=L){const{page:e}=L,i=y.getPageSize(e);null!=i&&(y.bind(u,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,e,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),A.setUniform2fv("u_mosaicSize",i),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES))}let j=-1;for(const e of f){if(!e.layerData.has(E))continue;e.key.level!==j&&(j=e.key.level,U.setDataUniforms(A,m,_,j,y));const i=2**(m-j)/g;A.setUniform1f("u_zoomFactor",i);const n=e.layerData.get(E);if(!n.lineIndexCount)continue;n.prepareForRendering(u);const a=n.vao;if(null!=a){if(u.bindVAO(a),A.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),u.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.CompareFunction.EQUAL,e.stencilRef,255),S||R){const e=n.patternMap;if(!e)continue;for(const[i,n]of e){const e=y.getPageSize(i);null!=e&&(y.bind(u,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.TextureSamplingMode.LINEAR,i,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),A.setUniform2fv("u_mosaicSize",e),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_1__.VTL_TEXTURE_BINDING_UNIT_SPRITES),u.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,n[1],_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else u.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,n.lineIndexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.lineIndexStart);e.triangleCount+=n.lineIndexCount/3}}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WGLBrushVTLSymbol": () => (/* binding */ _)
/* harmony export */ });
/* harmony import */ var _chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../chunks/vec2f32.js */ "./node_modules/@arcgis/core/chunks/vec2f32.js");
/* harmony import */ var _vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vectorTiles/decluttering/config.js */ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js");
/* harmony import */ var _vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vectorTiles/style/StyleDefinition.js */ "./node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _GeometryUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../GeometryUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../number.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/number.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const y=1/65536;class _ extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_7__["default"]{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_0__.c)()}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let n;i===_enums_js__WEBPACK_IMPORTED_MODULE_4__.WGLDrawPhase.HITTEST&&(n=(0,_number_js__WEBPACK_IMPORTED_MODULE_6__.u32to4Xu8)(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}_drawIcons(e,t,o,u){const{context:p,displayLevel:c,drawPhase:m,painter:d,spriteMosaic:g,state:y,styleLayerUID:_,requestRender:h,allowDelayedRender:M}=e,P=t.iconMaterial,T=d.vectorTilesMaterialManager;let U,E=!1;for(const i of o)if(i.layerData.has(_)&&(U=i.layerData.get(_),U.iconPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const v=t.getPaintValue("icon-translate",c),x=t.getPaintValue("icon-translate-anchor",c);let D=t.getLayoutValue("icon-rotation-alignment",c);D===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.AUTO&&(D=t.getLayoutValue("symbol-placement",c)===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.SymbolPlacement.POINT?_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.VIEWPORT:_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP);const I=D===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP,R=t.getLayoutValue("icon-keep-upright",c)&&I,S=U.isIconSDF,V=m===_enums_js__WEBPACK_IMPORTED_MODULE_4__.WGLDrawPhase.HITTEST,w=this._iconProgramOptions;w.id=V,w.sdf=S;const A=T.getMaterialProgram(p,P,w);if(M&&null!=h&&!A.compiled)return void h();p.useProgram(A),A.setUniformMatrix3fv("u_displayViewMat3",D===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP?y.displayViewMat3:y.displayMat3),A.setUniformMatrix3fv("u_displayMat3",x===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.TranslateAnchor.VIEWPORT?y.displayMat3:y.displayViewMat3),A.setUniform2fv("u_iconTranslation",v),A.setUniform1f("u_depth",t.z),A.setUniform1f("u_mapRotation",(0,_GeometryUtils_js__WEBPACK_IMPORTED_MODULE_5__.degToByte)(y.rotation)),A.setUniform1f("u_keepUpright",R?1:0),A.setUniform1f("u_level",10*c),A.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_SPRITES),A.setUniform1f("u_fadeDuration",_vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_1__.FADE_DURATION/1e3),V&&A.setUniform4fv("u_id",u);let L=-1;for(const i of o){if(!i.layerData.has(_))continue;if(i.key.level!==L&&(L=i.key.level,P.setDataUniforms(A,c,t,L,g)),U=i.layerData.get(_),0===U.iconPerPageElementsMap.size)continue;U.prepareForRendering(p),U.updateOpacityInfo();const a=U.iconVAO;if(null!=a){p.bindVAO(a),A.setUniformMatrix3fv("u_dvsMat3",i.transforms.dvs),A.setUniform1f("u_time",(performance.now()-U.lastOpacityUpdate)/1e3);for(const[t,a]of U.iconPerPageElementsMap)this._renderIconRange(e,A,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(n,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.LINEAR,a,_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_SPRITES),n.setStencilTestEnabled(!0),n.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.CompareFunction.GREATER,255,255),n.setStencilWriteMask(0),n.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PrimitiveType.TRIANGLES,i[1],_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,u,p){const{context:c,displayLevel:d,drawPhase:g,glyphMosaic:_,painter:h,pixelRatio:M,spriteMosaic:P,state:T,styleLayerUID:U,requestRender:E,allowDelayedRender:v}=e,x=s.textMaterial,D=h.vectorTilesMaterialManager;let I,R=!1;for(const t of u)if(t.layerData.has(U)&&(I=t.layerData.get(U),I.glyphPerPageElementsMap.size>0)){R=!0;break}if(!R)return;const S=s.getPaintProperty("text-opacity");if(S&&!S.isDataDriven&&0===S.getValue(d))return;const V=s.getPaintProperty("text-color"),w=!V||V.isDataDriven||V.getValue(d)[3]>0,A=s.getPaintProperty("text-halo-width"),L=s.getPaintProperty("text-halo-color"),O=(!A||A.isDataDriven||A.getValue(d)>0)&&(!L||L.isDataDriven||L.getValue(d)[3]>0);if(!w&&!O)return;const N=24/8;let z=s.getLayoutValue("text-rotation-alignment",d);z===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.AUTO&&(z=s.getLayoutValue("symbol-placement",d)===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.SymbolPlacement.POINT?_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.VIEWPORT:_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP);const k=z===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP,b=s.getLayoutValue("text-keep-upright",d)&&k,G=g===_enums_js__WEBPACK_IMPORTED_MODULE_4__.WGLDrawPhase.HITTEST,j=.8*N/M;this._glyphTextureSize||(this._glyphTextureSize=(0,_chunks_vec2f32_js__WEBPACK_IMPORTED_MODULE_0__.f)(_.width/4,_.height/4));const W=s.getPaintValue("text-translate",d),F=s.getPaintValue("text-translate-anchor",d),B=this._sdfProgramOptions;B.id=G;const H=D.getMaterialProgram(c,x,B);if(v&&null!=E&&!H.compiled)return void E();c.useProgram(H),H.setUniformMatrix3fv("u_displayViewMat3",z===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.RotationAlignment.MAP?T.displayViewMat3:T.displayMat3),H.setUniformMatrix3fv("u_displayMat3",F===_vectorTiles_style_StyleDefinition_js__WEBPACK_IMPORTED_MODULE_2__.TranslateAnchor.VIEWPORT?T.displayMat3:T.displayViewMat3),H.setUniform2fv("u_textTranslation",W),H.setUniform1f("u_depth",s.z+y),H.setUniform2fv("u_mosaicSize",this._glyphTextureSize),H.setUniform1f("u_mapRotation",(0,_GeometryUtils_js__WEBPACK_IMPORTED_MODULE_5__.degToByte)(T.rotation)),H.setUniform1f("u_keepUpright",b?1:0),H.setUniform1f("u_level",10*d),H.setUniform1i("u_texture",_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_GLYPHS),H.setUniform1f("u_antialiasingWidth",j),H.setUniform1f("u_fadeDuration",_vectorTiles_decluttering_config_js__WEBPACK_IMPORTED_MODULE_1__.FADE_DURATION/1e3),G&&H.setUniform4fv("u_id",p);let C=-1;for(const t of u){if(!t.layerData.has(U))continue;if(t.key.level!==C&&(C=t.key.level,x.setDataUniforms(H,d,s,C,P)),I=t.layerData.get(U),0===I.glyphPerPageElementsMap.size)continue;I.prepareForRendering(c),I.updateOpacityInfo();const e=I.textVAO;if(null==e)continue;c.bindVAO(e),H.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),c.setStencilTestEnabled(!0),c.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.CompareFunction.GREATER,255,255),c.setStencilWriteMask(0);const i=(performance.now()-I.lastOpacityUpdate)/1e3;H.setUniform1f("u_time",i),I.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,_,H,O,w,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.LINEAR,i,_definitions_js__WEBPACK_IMPORTED_MODULE_3__.VTL_TEXTURE_BINDING_UNIT_GLYPHS),n&&(r.setUniform1f("u_halo",1),e.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PrimitiveType.TRIANGLES,t[1],_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f("u_halo",0),e.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PrimitiveType.TRIANGLES,t[1],_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.DataType.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ v)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WGLBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class v extends _WGLBrush_js__WEBPACK_IMPORTED_MODULE_1__["default"]{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e){e&&e.includes("hittest")?t.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE):t.setBlendFunctionSeparate(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}draw(t,e,i){const s=this.getGeometryType();e.commit(t);const o=e.getGeometry(s);null!=o&&(t.timeline.begin(this.name),t.attributeView.bindTextures(t.context),t.context.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.CompareFunction.EQUAL,e.stencilRef,255),o.forEachCommand((s=>{const o=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.MaterialKeyBase.load(s.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(t,e,s,i)})))}_setSharedUniforms(n,u,m){const{displayLevel:l,pixelRatio:v,state:f,passOptions:p}=u;null!=p&&"hittest"===p.type&&(n.setUniform2fv("u_hittestPos",p.position),n.setUniform1f("u_hittestDist",p.distance)),n.setUniform1f("u_pixelRatio",v),n.setUniformMatrix3fv("u_tileMat3",m.transforms.tileMat3),n.setUniformMatrix3fv("u_viewMat3",f.viewMat3),n.setUniformMatrix3fv("u_dvsMat3",m.transforms.dvs),n.setUniformMatrix3fv("u_displayViewMat3",f.displayViewMat3),n.setUniform1f("u_currentZoom",Math.round(l*_definitions_js__WEBPACK_IMPORTED_MODULE_0__.MIN_MAX_ZOOM_PRECISION_FACTOR)),n.setUniform1i("u_attributeTextureSize",u.attributeView.size),n.setUniform1i("u_attributeData0",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_0),n.setUniform1i("u_attributeData1",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_1),n.setUniform1i("u_attributeData2",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_2),n.setUniform1i("u_attributeData3",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_3),n.setUniform1i("u_attributeData4",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_4),n.setUniform1i("u_attributeData5",_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TEXTURE_BINDING_ATTRIBUTE_DATA_5)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv("u_vvSizeMinMaxValue",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f("u_vvSizeScaleStopsValue",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);null!=t&&(e.setUniform1fv("u_vvSizeFieldStopsValues",t.values),e.setUniform1fv("u_vvSizeFieldStopsSizes",t.sizes))}t.vvSizeUnitValue&&e.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv("u_vvColorValues",i.vvColorValues),e.setUniform4fv("u_vvColors",i.vvColors)),t.vvOpacity&&(e.setUniform1fv("u_vvOpacityValues",i.vvOpacityValues),e.setUniform1fv("u_vvOpacities",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f("u_vvRotationType","geographic"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=["a_pos"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join("-")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),u=s.map((t=>({...t}))),m=Math.max(...e.attributes.values()),l={geometry:u};let v=0;for(const e of o){const t=s[e];l.geometry.push({count:t.count,name:t.name+"1",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),l.geometry.push({count:t.count,name:t.name+"2",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+"1",m+ ++v),n.set(t.name+"2",m+ ++v)}r={bufferLayouts:l,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function u(e){const t={geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.SHORT},{location:1,name:"a_id",count:3,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_BYTE},{location:3,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_aux1",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_SHORT},{location:5,name:"a_aux2",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.SHORT},{location:6,name:"a_aux3",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_BYTE},{location:7,name:"a_zoomRange",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_SHORT}]};switch(e.symbologyType){case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.SIMPLE:case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:"materials/fill",vertexLayout:t}}class c extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_3__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.FILL}supportsSymbology(e){return e!==_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.DOT_DENSITY}drawGeometry(o,r,i,m){const{context:c,painter:f,rendererInfo:p,requiredLevel:y,passOptions:_,requestRender:d,allowDelayedRender:E}=o,g=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_4__.FillMaterialKey.load(i.materialKey),N=(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_5__.getTechniqueFromMaterialKey)(g.data),S=null!=_&&"hittest"===_.type,T=f.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=N.programSpec??u(g);let h=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.PrimitiveType.TRIANGLES,L=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_2__.createProgramDescriptor)(g.data,U);S&&(L=this._getTriangleDesc(i.materialKey,L,x),h=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.PrimitiveType.POINTS);const{attributes:O,bufferLayouts:G}=L,D=T.getMaterialProgram(o,g,I,O,m);if(E&&null!=d&&!D.compiled)return void d();c.useProgram(D),this._setSharedUniforms(D,o,r);const{row:b,col:R}=r.key,M=R*_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE,w=b*_definitions_js__WEBPACK_IMPORTED_MODULE_0__.TILE_SIZE;if(D.setUniform2f("u_tileOffset",M%_definitions_js__WEBPACK_IMPORTED_MODULE_0__.MAX_REPRESENTABLE_INT,w%_definitions_js__WEBPACK_IMPORTED_MODULE_0__.MAX_REPRESENTABLE_INT),D.setUniform2f("u_maxIntNumOfCrossing",Math.floor(M/_definitions_js__WEBPACK_IMPORTED_MODULE_0__.MAX_REPRESENTABLE_INT),Math.floor(w/_definitions_js__WEBPACK_IMPORTED_MODULE_0__.MAX_REPRESENTABLE_INT)),g.textureBinding){f.textureManager.bindTextures(c,D,g);const e=1/2**(y-r.key.level);D.setUniform1f("u_zoomFactor",e)}const j=1/o.pixelRatio;D.setUniform1f("u_blur",j),D.setUniform1f("u_antialiasing",j),this._setSizeVVUniforms(g,D,p,r),this._setColorAndOpacityVVUniforms(g,D,p);const B=i.target.getVAO(c,G,O,S);let A=i.indexCount,F=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(A/=3,F/=3),c.bindVAO(B),this._drawFills(o,r,D,h,A,F)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_6__.DataType.UNSIGNED_INT,i)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i=e=>(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT},{location:1,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT},{location:8,name:"a_texCoords",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT}]});class l extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,a,l){const{context:m,painter:u,state:d,rendererInfo:f,requestRender:c,allowDelayedRender:_}=e,p=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__.LabelMaterialKey.load(a.materialKey),E=p.mapAligned?1:0;if(!E&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:y,attributes:N}=i(p),U=u.materialManager.getMaterialProgram(e,p,"materials/label",N,l);if(_&&null!=c&&!U.compiled)return void c();e.context.setStencilFunction(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.CompareFunction.EQUAL,0,255),m.useProgram(U),this._setSharedUniforms(U,e,t),u.textureManager.bindTextures(m,U,p);const S=1===E?d.displayViewMat3:d.displayMat3;this._setSizeVVUniforms(p,U,f,t),U.setUniform1f("u_mapRotation",Math.floor(d.rotation/360*254)),U.setUniform1f("u_mapAligned",E),U.setUniformMatrix3fv("u_displayMat3",S),U.setUniform1f("u_opacity",1),U.setUniform2fv("u_screenSize",e.state.size);const T=a.target.getVAO(m,y,N),g=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f("u_isHaloPass",0),U.setUniform1f("u_isBackgroundPass",1),m.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,a.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,g),U.setUniform1f("u_isHaloPass",1),U.setUniform1f("u_isBackgroundPass",0),m.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,a.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,g),U.setUniform1f("u_isHaloPass",0),U.setUniform1f("u_isBackgroundPass",0),m.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,a.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,g),m.setStencilTestEnabled(!0),m.setBlendingEnabled(!0)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i=e=>(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT},{location:1,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.BYTE},{location:7,name:"a_aux",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT}]});class s extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.LINE}supportsSymbology(e){return!0}drawGeometry(e,t,o,s){const{context:l,painter:m,rendererInfo:c,displayLevel:u,passOptions:d,requestRender:p,allowDelayedRender:y}=e,_=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__.LineMaterialKey.load(o.materialKey),f=null!=d&&"hittest"===d.type;let E=i(_),N=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES;f&&(E=this._getTriangleDesc(o.materialKey,E),N=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.POINTS);const{attributes:g,bufferLayouts:S}=E,T=m.materialManager.getMaterialProgram(e,_,"materials/line",g,s);if(y&&null!=p&&!T.compiled)return void p();const U=1/e.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,e,t),_.textureBinding&&m.textureManager.bindTextures(l,T,_);const I=2**(u-t.key.level);T.setUniform1f("u_zoomFactor",I),T.setUniform1f("u_blur",G+U),T.setUniform1f("u_antialiasing",U),this._setSizeVVUniforms(_,T,c,t),this._setColorAndOpacityVVUniforms(_,T,c),l.setFaceCullingEnabled(!1);const D=o.target.getVAO(l,S,g,f);let R=o.indexCount,x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(R/=3,x/=3),l.bindVAO(D),l.drawElements(N,R,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,x)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _techniques_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const l={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.SHORT},{location:1,name:"a_vertexOffset",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.SHORT},{location:2,name:"a_texCoords",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]};class m extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.MARKER}supportsSymbology(t){return t!==_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLSymbologyType.HEATMAP&&t!==_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLSymbologyType.PIE_CHART}drawGeometry(t,e,a,i){const{context:m,painter:u,rendererInfo:d,state:c,passOptions:p,requestRender:y,allowDelayedRender:_}=t,E=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__.MarkerMaterialKey.load(a.materialKey),f=(0,_techniques_utils_js__WEBPACK_IMPORTED_MODULE_4__.getTechniqueFromMaterialKey)(E.data),S=null!=p&&"hittest"===p.type,{shader:N,vertexLayout:T,hittestAttributes:g}=f.programSpec??l;let x=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.TRIANGLES,R=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)(E.data,T);S&&(R=this._getTriangleDesc(a.materialKey,R,g),x=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.PrimitiveType.POINTS);const{attributes:h,bufferLayouts:U}=R,A=u.materialManager.getMaterialProgram(t,E,N,h,i);if(_&&null!=y&&!A.compiled)return void y();m.useProgram(A),E.textureBinding&&u.textureManager.bindTextures(m,A,E,!0),this._setSharedUniforms(A,t,e);const O=E.vvRotation?c.displayViewMat3:c.displayMat3;A.setUniformMatrix3fv("u_displayMat3",O),this._setSizeVVUniforms(E,A,d,e),this._setColorAndOpacityVVUniforms(E,A,d),this._setRotationVVUniforms(E,A,d);const G=a.target.getVAO(m,U,h,S);let I=a.indexCount,M=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(I/=3,M/=3),m.bindVAO(G),this._drawMarkers(t,e,A,x,I,M,S),m.bindVAO(null)}_drawMarkers(t,e,o,a,r,n,s){t.context.drawElements(a,r,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_INT,n)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WGLGeometryBrush.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const s=t=>(0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.createProgramDescriptor)(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT},{location:1,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.BYTE},{location:6,name:"a_zoomRange",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.SHORT},{location:8,name:"a_texCoords",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_SHORT}]});class i extends _WGLGeometryBrush_js__WEBPACK_IMPORTED_MODULE_2__["default"]{dispose(){}getGeometryType(){return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.TEXT}supportsSymbology(t){return!0}drawGeometry(t,e,o,i){const{context:m,painter:l,rendererInfo:u,state:d,passOptions:f,requestRender:_,allowDelayedRender:p}=t,c=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_3__.TextMaterialKey.load(o.materialKey),y=null!=f&&"hittest"===f.type,{bufferLayouts:E,attributes:N}=s(c),U=l.materialManager.getMaterialProgram(t,c,"materials/text",N,i);if(p&&null!=_&&!U.compiled)return void _();m.useProgram(U);let S=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES;y&&(S=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.POINTS),this._setSharedUniforms(U,t,e),l.textureManager.bindTextures(m,U,c),U.setUniformMatrix3fv("u_displayMat3",d.displayMat3),U.setUniformMatrix3fv("u_displayViewMat3",d.displayViewMat3),this._setSizeVVUniforms(c,U,u,e),this._setColorAndOpacityVVUniforms(c,U,u),this._setRotationVVUniforms(c,U,u);const T=o.target.getVAO(m,E,N),x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f("u_isHaloPass",0),U.setUniform1f("u_isBackgroundPass",1),m.drawElements(S,o.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,x),U.setUniform1f("u_isHaloPass",1),U.setUniform1f("u_isBackgroundPass",0),m.drawElements(_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveType.TRIANGLES,o.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,x),U.setUniform1f("u_isHaloPass",0),U.setUniform1f("u_isBackgroundPass",0),m.drawElements(S,o.indexCount,_webgl_enums_js__WEBPACK_IMPORTED_MODULE_4__.DataType.UNSIGNED_INT,x)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Effect": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t{constructor(){this.name=this.constructor.name}createOptions(t,r){return null}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "background": () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sources/resolver.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e={shaders:{vertexShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__.resolveIncludes)("background/background.vert"),fragmentShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__.resolveIncludes)("background/background.frag")},attributes:new Map([["a_pos",0]])};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tileInfo": () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sources/resolver.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r={shaders:{vertexShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__.resolveIncludes)("tileInfo/tileInfo.vert"),fragmentShader:(0,_sources_resolver_js__WEBPACK_IMPORTED_MODULE_0__.resolveIncludes)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveIncludes": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _shaderRepository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaderRepository.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js");
/* harmony import */ var _webgl_ShaderCompiler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../webgl/ShaderCompiler.js */ "./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(e){let o=_shaderRepository_js__WEBPACK_IMPORTED_MODULE_0__["default"];return e.split("/").forEach((r=>{o&&(o=o[r])})),o}const t=new _webgl_ShaderCompiler_js__WEBPACK_IMPORTED_MODULE_1__.ShaderCompiler(o);function n(r){return t.resolveIncludes(r)}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ e)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},debug:{overlay:{"overlay.frag":"precision mediump float;\nvarying vec4 v_color;\nvoid main(void) {\ngl_FragColor = v_color;\n}","overlay.vert":"attribute vec3 a_PositionAndFlags;\nuniform mat3 u_dvsMat3;\nuniform vec4 u_colors[4];\nuniform float u_opacities[4];\nvarying vec4 v_color;\nvoid main(void) {\nvec2 position = a_PositionAndFlags.xy;\nfloat flags = a_PositionAndFlags.z;\nint colorIndex = int(mod(flags, 4.0));\nvec4 color;\nfor (int i = 0; i < 4; i++) {\ncolor = u_colors[i];\nif (i == colorIndex) {\nbreak;\n}\n}\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\nfloat opacity;\nfor (int i = 0; i < 4; i++) {\nopacity = u_opacities[i];\nif (i == opacityIndex) {\nbreak;\n}\n}\nv_color = color * opacity;\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\n}"}},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},heatmap:{heatmapResolve:{"heatmapResolve.frag":"precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}","heatmapResolve.vert":"precision highp float;\nattribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp sampler2D u_attributeData4;\nuniform highp sampler2D u_attributeData5;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nhighp vec4 getAttributeData4(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData4, coords);\n}\nhighp vec4 getAttributeData5(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData5, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","barycentric.glsl":"float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\nuniform vec2 u_maxIntNumOfCrossing;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\na_width *= INV_SCALE_COMPRESSION_FACTOR;\n}\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\na_height *= INV_SCALE_COMPRESSION_FACTOR;\n}\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 patternSize = vec2(a_width, a_height);\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\ntileOffset = mod(tileOffset, patternSize);\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\n#ifdef VV_COLOR\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\n#else\nv_sampleAlphaOnly = 0.0;\n#endif\n}\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif"},icon:{"common.glsl":"#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif",heatmapAccumulate:{"common.glsl":"varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;","heatmapAccumulate.frag":"precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}","heatmapAccumulate.vert":"precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},"hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_isBackground  = a_glyphData.w;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor = (isBackground + isText) * a_color;\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},pie:{"pie.frag":"precision mediump float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\nuniform lowp vec4 u_defaultColor;\nuniform lowp vec4 u_othersColor;\nuniform lowp vec4 u_outlineColor;\nuniform float u_donutRatio;\nuniform float u_sectorThreshold;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\n#if __VERSION__ == 300\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn u_colors[colorIndex];\n#else\nmediump int colorIndex;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == index) {\ncolorIndex = int(filteredSectorToColorId[i].y);\n}\n}\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == colorIndex) {\nreturn u_colors[i];\n}\n}\nreturn u_colors[NUMBER_OF_FIELDS - 1];\n#endif\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = u_outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","pie.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\nuniform float u_outlineWidth;\nuniform mediump float u_sectorThreshold;\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nint filter(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\nif (sectorAngle > u_sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\n#if __VERSION__ == 300\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\nif (i == filteredInfo.colorId) {\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\n}\n}\n#endif\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[NUMBER_OF_FIELDS]) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/hittest/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat outlineSize = u_outlineWidth;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(size.x, size.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData0 = getAttributeData3(a_id);\nattributeData[0] = filterNaNValues(attributeData0.x);\nattributeData[1] = filterNaNValues(attributeData0.y);\nattributeData[2] = filterNaNValues(attributeData0.z);\nattributeData[3] = filterNaNValues(attributeData0.w);\n#if (NUMBER_OF_FIELDS > 4)\nvec4 attributeData1 = getAttributeData4(a_id);\nattributeData[4] = filterNaNValues(attributeData1.x);\nattributeData[5] = filterNaNValues(attributeData1.y);\nattributeData[6] = filterNaNValues(attributeData1.z);\nattributeData[7] = filterNaNValues(attributeData1.w);\n#endif\n#if (NUMBER_OF_FIELDS > 8)\nvec4 attributeData2 = getAttributeData5(a_id);\nattributeData[8] = filterNaNValues(attributeData2.x);\nattributeData[9] = filterNaNValues(attributeData2.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[NUMBER_OF_FIELDS];\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\n#if __VERSION__ == 300\nv_filteredSectorToColorId = filteredSectorToColorId;\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == numOfEntries) {\nbreak;\n}\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\n}\n#endif\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},shared:{line:{"common.glsl":"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},"symbologyTypeUtils.glsl":"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif",text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_isBackground  = a_aux.y;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef SUPPORTS_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},overlay:{overlay:{"overlay.frag":"precision lowp float;\nuniform lowp sampler2D u_texture;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_texture, v_uv);\ngl_FragColor = color *  u_opacity;\n}","overlay.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_perspective;\nvarying mediump vec2 v_uv;\nvoid main(void) {\nv_uv = a_uv;\nfloat w = 1.0 + dot(a_uv, u_perspective);\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\ngl_Position = vec4(w * pos.xy, 0.0, w);\n}"}},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\nvec4 color = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\ngl_FragColor = clamp(color, 0.0, 1.0);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","common.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","getSurfaceValues.glsl":"#include <raster/common/mirror.glsl>\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\nvec2 onePixel = 1.0 / srcImageSize;\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\nvalues[0] = va.r;\nvalues[1] = vb.r;\nvalues[2] = vc.r;\nvalues[3] = vd.r;\nvalues[4] = ve.r;\nvalues[5] = vf.r;\nvalues[6] = vg.r;\nvalues[7] = vh.r;\nvalues[8] = vi.r;\nvalues[9] = alpha;\n}","inverse.glsl":"float invertValue(float value) {\nfloat s = sign(value);\nreturn (s * s) / (value + abs(s) - 1.0);\n}","mirror.glsl":"vec2 mirror(vec2 pos) {\nvec2 pos1 = abs(pos);\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"getFadeOpacity.glsl":"uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}","getFragmentColor.glsl":"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}",imagery:{"imagery.frag":"precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}","imagery.vert":"attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},particles:{"particles.frag":"precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}","particles.vert":"attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}"},streamlines:{"streamlines.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}","streamlines.vert":"attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}"},"vv.glsl":"#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\n#include <raster/common/getSurfaceValues.glsl>\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nfloat pv[10];\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},rfx:{aspect:{"aspect.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nconst float pi = 3.14159265359;\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\nalpha *= sign(abs(dzx) + abs(dzy));\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\nfloat aspect = aspect_rad * 180.0 / pi;\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\n}"},bandarithmetic:{"bandarithmetic.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nuniform float u_adjustments[3];\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index;\n#ifdef NDXI\nindex = (nir - red) * invertValue(nir + red);\n#elif defined(SR)\nindex = nir * invertValue(red);\n#elif defined(CI)\nindex = nir * invertValue(red) - 1.0;\n#elif defined(SAVI)\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\n#elif defined(TSAVI)\nfloat s = u_adjustments[0];\nfloat a = u_adjustments[1];\nfloat x = u_adjustments[2];\nfloat y = -a * s + x * (1.0 + s * s);\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\n#elif defined(MAVI)\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\n#elif defined(GEMI)\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\n#elif defined(PVI)\nfloat a = u_adjustments[0];\nfloat b = u_adjustments[1];\nfloat y = sqrt(1.0 + a * a);\nindex = (nir - a * red - b) * invertValue(y);\n#elif defined(VARI)\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\n#elif defined(MTVI2)\nfloat green = pv2.b;\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\n#elif defined(RTVICORE)\nfloat green = pv2.b;\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\n#elif defined(EVI)\nfloat blue = pv2.b;\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\nindex =  (2.5 * (nir - red)) * invertValue(denom);\n#elif defined(WNDWI)\nfloat g = pv2.r;\nfloat n = pv2.g;\nfloat s = pv2.s;\nfloat a = u_adjustments[0];\nfloat denom = g + a * n + (1.0 - a) * s;\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\n#elif defined(BAI)\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\n#else\ngl_FragColor = pv;\nreturn;\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}"},compositeband:{"compositeband.frag":"precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nvarying vec2 v_texcoord;\nvoid main() {\nvec4 p0 = texture2D(u_image, v_texcoord);\nvec4 p1 = texture2D(u_image1, v_texcoord);\nvec4 p2 = texture2D(u_image2, v_texcoord);\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\n}"},convolution:{"convolution.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\nuniform float u_kernel[25];\n#include <raster/common/mirror.glsl>\nvoid main() {\nvec3 rgb = vec3(0.0, 0.0, 0.0);\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat alpha = 1.0;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\nalpha *= pv.a;\n}\n}\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(rgb * alpha, alpha);\n}"},curvature:{"curvature.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform float u_zlFactor;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\nfloat curvature = 0.0;\n#ifdef STANDARD\ncurvature = -u_zlFactor * (d + e);\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n#else\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\nfloat g = (-pv[3] + pv[5]) / 2.0;\nfloat h = (pv[1] - pv[7]) / 2.0;\nfloat g2 = g * g;\nfloat h2 = h * h;\n#ifdef PROFILE\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\n#else\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\n#endif\n#endif\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n}"},extractband:{"extractband.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\ngl_FragColor = vec4(pv2, pv.a);\n}"},local:{"local.frag":"precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef TWO_IMAGES\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\n#elif defined(CONDITIONAL)\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\n#endif\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef PLUS\nresult = a + b;\n#elif defined(MINUS)\nresult = a - b;\n#elif defined(TIMES)\nresult = a * b;\n#elif defined(DIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOATDIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOORDIVIDE)\nresult = floor(a * invertValue(b));\nalpha *= float(abs(sign(b)));\n#elif defined(SQUARE)\nresult = a * a;\n#elif defined(SQRT)\nresult = sqrt(a);\n#elif defined(POWER)\nresult = pow(a, b);\n#elif defined(LN)\nresult = a <= 0.0 ? 0.0: log(a);\nalpha *= float(a > 0.0);\n#elif defined(LOG_1_0)\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\nalpha *= float(a > 0.0);\n#elif defined(LOG_2)\nresult = a <= 0.0 ? 0.0: log2(a);\nalpha *= float(a > 0.0);\n#elif defined(EXP)\nresult = exp(a);\n#elif defined(EXP_1_0)\nresult = pow(10.0, a);\n#elif defined(EXP_2)\nresult = pow(2.0, a);\n#elif defined(ROUNDDOWN)\nresult = floor(a);\n#elif defined(ROUNDUP)\nresult = ceil(a);\n#elif defined(INT)\nresult = float(sign(a)) * floor(abs(a));\n#elif defined(MOD)\nresult = mod(a, b);\n#elif defined(NEGATE)\nresult = -a;\n#elif defined(ABS)\nresult = abs(a);\n#elif defined(ACOS)\nresult = abs(a) > 1.0 ? 0.0: acos(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ACOSH)\nresult = acosh(a);\n#elif defined(POLYFILLACOSH)\nresult = log(a + sqrt(a * a - 1.0));\n#elif defined(ASIN)\nresult = abs(a) > 1.0 ? 0.0: asin(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ASINH)\nresult = asinh(a);\n#elif defined(POLYFILLASINH)\nresult = log(a + sqrt(a * a + 1.0));\n#elif defined(ATAN)\nresult = atan(a);\n#elif defined(ATANH)\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\nalpha *= step(abs(a), 1.0);\n#elif defined(POLYFILLATANH)\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\n#elif defined(ATAN_2)\nresult = atan(a, b);\n#elif defined(COS)\nresult = cos(a);\n#elif defined(COSH)\nresult = cosh(a);\n#elif defined(POLYFILLCOSH)\nfloat halfexp = exp(a) / 2.0;\nresult = halfexp + 1.0 / halfexp;\n#elif defined(SIN)\nresult = sin(a);\n#elif defined(SINH)\nresult = sinh(a);\n#elif defined(POLYFILLSINH)\nfloat halfexp = exp(a) / 2.0;\nresult = halfexp - 1.0 / halfexp;\n#elif defined(TAN)\nresult = tan(a);\n#elif defined(TANH)\nresult = tanh(a);\n#elif defined(POLYFILLTANH)\nfloat expx = exp(a);\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\n#elif defined(BITWISEAND)\nresult = a & b;\n#elif defined(BITWISEOR)\nresult = a | b;\n#elif defined(BITWISELEFTSHIFT)\nresult = a << b;\n#elif defined(BITWISERIGHTSHIFT)\nresult = a >> b;\n#elif defined(BITWISENOT)\nresult = ~a;\n#elif defined(BITWISEXOR)\nresult = a ^ b;\n#elif defined(BOOLEANAND)\nresult = float((a != 0.0) && (b != 0.0));\n#elif defined(BOOLEANNOT)\nresult = float(a == 0.0);\n#elif defined(BOOLEANOR)\nresult = float((a != 0.0) || (b != 0.0));\n#elif defined(BOOLEANXOR)\nresult = float((a != 0.0) ^^ (b != 0.0));\n#elif defined(GREATERTHAN)\nresult = float(a > b);\n#elif defined(GREATERTHANEQUAL)\nresult = float(a >= b);\n#elif defined(LESSTHAN)\nresult = float(a < b);\n#elif defined(LESSTHANEQUAL)\nresult = float(a <= b);\n#elif defined(EQUALTO)\nresult = float(a == b);\n#elif defined(NOTEQUAL)\nresult = float(a != b);\n#elif defined(ISNULL)\nresult = float(alpha == 0.0);\nalpha = 1.0;\n#elif defined(SETNULL)\nfloat maskValue = float(a == 0.0);\nresult = maskValue * b;\nalpha *= maskValue;\n#elif defined(CONDITIONAL)\nfloat weight = float(abs(sign(a)));\nresult = weight * b + (1.0 - weight) * c;\n#endif\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\nresult = isInvalid ? 0.0 : result;\nalpha *= float(!isInvalid);\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}"},mask:{"mask.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_INCLUDED_RANGES 6\n#define LEN_NODATA_VALUES 6\nuniform highp float u_includedRanges[6];\nuniform highp float u_noDataValues[6];\nfloat maskFactor(float bandValue, float fromValue, float to) {\nfloat factor = 1.0;\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\nfactor *= float(u_noDataValues[i] != bandValue);\n}\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\nreturn factor;\n}\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\n#ifdef MULTI_BAND\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\nfloat maskFactor = redFactor * greenFactor * blueFactor;\ngl_FragColor = pv * maskFactor;\n#else\ngl_FragColor = pv * redFactor;\n#endif\n}"},ndvi:{"ndvi.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index = (nir - red) * invertValue(nir + red);\n#ifdef SCALED\nindex = floor((index + 1.0) * 100.0 + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}"},remap:{"remap.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_REMAP_RANGES 18\n#define LEN_NODATA_RANGES 12\nuniform highp float u_rangeMaps[18];\nuniform highp float u_noDataRanges[12];\nuniform highp float u_unmatchMask;\nuniform vec2 u_clampRange;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat factor = 1.0;\nfloat bandValue = pv.r;\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\nfactor *= inside;\n}\nfloat mapValue = 0.0;\nfloat includeMask = 0.0;\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\n}\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\n}"},slope:{"slope.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform float u_zFactor;\nuniform vec2 u_srcImageSize;\nuniform float u_pixelSizePower;\nuniform float u_pixelSizeFactor;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\n#ifdef PERCENT_RISE\nfloat percentRise = rise2run * 100.0;\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\n#else\nfloat degree = atan(rise2run) * 57.2957795;\ngl_FragColor = vec4(degree, degree, degree, alpha);\n#endif\n}"},stretch:{"stretch.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying highp vec2 v_texcoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\nval = clamp(val, minCutOff, maxCutOff);\nfloat stretchedVal;\n#ifdef USE_GAMMA\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\n#else\nstretchedVal = minOutput + (val - minCutOff) * factor;\n#endif\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\n#ifdef MULTI_BAND\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\n#else\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\n#endif\n}"},vs:{"vs.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"atan2.glsl":"float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}","encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Technique": () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t{static getStorageSpec(t){return null}static createOrUpdateRendererSchema(t,e){return null!=t&&"default"===t.type?t:{type:"default"}}static getVariation(t){return{}}static getVariationHash(t){return 0}}t.type="default",t.programSpec=null;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DotDensityTechnique": () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../color.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/color.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _Technique_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Technique.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class a extends _Technique_js__WEBPACK_IMPORTED_MODULE_2__.Technique{static getStorageSpec({attributes:e}){return{visualVariables:!1,attributes:e??null}}static _createRendererSchema(){return{type:"dot-density",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}static createOrUpdateRendererSchema(o,r){const{attributes:a,dotValue:n,referenceScale:i,dotSize:l,dotBlendingEnabled:d,seed:s,backgroundColor:c}=r,u=null!=o&&"dot-density"===o.type?o:this._createRendererSchema();u.dotValue=n,u.dotSize=l,u.dotScale=i,u.dotBlending=d,u.seed=s;const{colors:m,activeDots:g,backgroundColor:p}=u;for(let y=0;y<_definitions_js__WEBPACK_IMPORTED_MODULE_1__.DOT_DENSITY_MAX_FIELDS;y++){const t=y>=a.length?null:a[y].color;(0,_color_js__WEBPACK_IMPORTED_MODULE_0__.writeColor)(m,t,4*y)}for(let e=0;e<8;e++)g[e]=e<r.attributes.length?1:0;return (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.writeColor)(p,c),u}static getVariation(e){return{ddDotBlending:e.dotBlending}}static getVariationHash(e){return e.dotBlending?1:0}}a.type="dot-density",a.programSpec={shader:"materials/fill",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.SHORT},{location:1,name:"a_id",count:3,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.UNSIGNED_BYTE},{location:3,name:"a_inverseArea",count:1,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.FLOAT}]}};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeatmapTechnique": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _renderers_support_heatmapUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../renderers/support/heatmapUtils.js */ "./node_modules/@arcgis/core/renderers/support/heatmapUtils.js");
/* harmony import */ var _Technique_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Technique.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class i extends _Technique_js__WEBPACK_IMPORTED_MODULE_2__.Technique{static getStorageSpec({field:e,valueExpression:t}){return{visualVariables:!1,attributes:e||t?[{field:e,valueExpression:t}]:null}}static _createRendererSchema(){return{type:"heatmap",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:"invalid"}}static createOrUpdateRendererSchema(a,r){const{radius:i,minDensity:n,maxDensity:s,referenceScale:o,field:c,valueExpression:l,colorStops:m}=r,p=s-n,d=c||l?1:0,u=m.map((({color:e,ratio:t})=>`${t}:${e.toString()}`)).join();let h,y=!0;return null!=a&&"heatmap"===a.type?(h=a,y=u!==a.gradientHash):h=this._createRendererSchema(),h.radius=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(i),h.minDensity=n,h.densityRange=p,h.referenceScale=o,h.isFieldActive=d,y&&(h.gradient=(0,_renderers_support_heatmapUtils_js__WEBPACK_IMPORTED_MODULE_1__.generateGradient)(m),h.gradientHash=u),h}}i.type="heatmap",i.programSpec={shader:"materials/icon/heatmapAccumulate",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.SHORT},{location:1,name:"a_vertexOffset",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.SHORT},{location:4,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.DataType.UNSIGNED_BYTE}]}};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PieChartTechnique": () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _Color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../Color.js */ "./node_modules/@arcgis/core/Color.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../color.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/color.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _Technique_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Technique.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class i extends _Technique_js__WEBPACK_IMPORTED_MODULE_4__.Technique{static getStorageSpec({attributes:e}){return{visualVariables:!0,attributes:e??null}}static _createRendererSchema(){return{type:"pie-chart",colors:new Float32Array(4*_definitions_js__WEBPACK_IMPORTED_MODULE_3__.CHART_MAX_FIELDS),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}static createOrUpdateRendererSchema(a,n){const{attributes:i,defaultColor:l,holePercentage:s,othersCategory:c,outline:u}=n,m=null!=a&&"pie-chart"===a.type?a:this._createRendererSchema();for(let t=0;t<_definitions_js__WEBPACK_IMPORTED_MODULE_3__.CHART_MAX_FIELDS;t++){const r=t>=i.length?new _Color_js__WEBPACK_IMPORTED_MODULE_0__["default"]([0,0,0,0]):i[t].color;(0,_color_js__WEBPACK_IMPORTED_MODULE_2__.writeColor)(m.colors,r,4*t)}return (0,_color_js__WEBPACK_IMPORTED_MODULE_2__.writeColor)(m.defaultColor,l),(0,_color_js__WEBPACK_IMPORTED_MODULE_2__.writeColor)(m.othersColor,c?.color),(0,_color_js__WEBPACK_IMPORTED_MODULE_2__.writeColor)(m.outlineColor,u?.color),m.outlineWidth=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(u?.width||0),m.holePercentage=s,m.sectorThreshold=c?.threshold||0,m.numberOfFields=i.length,m}static getVariation(e){return{numberOfFields:e.numberOfFields}}static getVariationHash(e){return e.numberOfFields}}i.type="pie-chart",i.programSpec={shader:"materials/pie",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.SHORT},{location:1,name:"a_vertexOffset",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.SHORT},{location:2,name:"a_texCoords",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:_webgl_enums_js__WEBPACK_IMPORTED_MODULE_5__.DataType.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]};


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assertRendererSchema": () => (/* binding */ s),
/* harmony export */   "getTechniqueFromMaterialKey": () => (/* binding */ p),
/* harmony export */   "getTechniqueFromRenderer": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/* harmony import */ var _Technique_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Technique.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js");
/* harmony import */ var _dotDensity_TechniqueDotDensity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dotDensity/TechniqueDotDensity.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js");
/* harmony import */ var _heatmap_TechniqueHeatmap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./heatmap/TechniqueHeatmap.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js");
/* harmony import */ var _pieChart_TechniquePieChart_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pieChart/TechniquePieChart.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function s(r,t){if(r.type!==t)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("material-view-model:unexpected-renderer-schema",`expected to find renderer schema of type "${t}" but found type "${r.type}"`)}function c(e){switch(e?.type){case"dot-density":return _dotDensity_TechniqueDotDensity_js__WEBPACK_IMPORTED_MODULE_4__.DotDensityTechnique;case"heatmap":return _heatmap_TechniqueHeatmap_js__WEBPACK_IMPORTED_MODULE_5__.HeatmapTechnique;case"pie-chart":return _pieChart_TechniquePieChart_js__WEBPACK_IMPORTED_MODULE_6__.PieChartTechnique;default:return _Technique_js__WEBPACK_IMPORTED_MODULE_3__.Technique}}function p(e){const{geometryType:s,symbologyType:c}=_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.MaterialKeyBase.load(e);switch(s){case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.FILL:if(c===_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.DOT_DENSITY)return _dotDensity_TechniqueDotDensity_js__WEBPACK_IMPORTED_MODULE_4__.DotDensityTechnique;break;case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.MARKER:switch(c){case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.HEATMAP:return _heatmap_TechniqueHeatmap_js__WEBPACK_IMPORTED_MODULE_5__.HeatmapTechnique;case _enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.PIE_CHART:return _pieChart_TechniquePieChart_js__WEBPACK_IMPORTED_MODULE_6__.PieChartTechnique}}return _Technique_js__WEBPACK_IMPORTED_MODULE_3__.Technique}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ n)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n(n){return window.WebGL2RenderingContext&&n instanceof window.WebGL2RenderingContext}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loadHeatmapTextureConfiguration": () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n(n,i){const{textureFloat:f,colorBufferFloat:s}=n.capabilities,u=f?.textureFloat,m=f?.textureFloatLinear,_=f?.textureHalfFloat,p=f?.textureHalfFloatLinear,d=f?.HALF_FLOAT,x=s?.textureFloat,b=s?.textureHalfFloat,c=s?.floatBlend,h=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_1__.unwrapOrThrow)(n.driverTest).floatBufferBlend.result;if(!u&&!_)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("heatmap:missing-texture-float","HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.");if(!x&&!b)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("heatmap:missing-color-buffer-float","HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.");if(!(c&&h||b))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("heatmap:missing-float-blend","HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float."+(h?"":" This device claims support for EXT_float_blend, but does not actually support it."));const E=u&&x&&c&&h,F=_&&b,R=m,L=p,T=!!s?.R32F,w=!!s?.R16F;if(E&&(R||!L))return R||i.warnOnce("Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced."),{dataType:_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelType.FLOAT,samplingMode:R?_enums_js__WEBPACK_IMPORTED_MODULE_2__.TextureSamplingMode.LINEAR:_enums_js__WEBPACK_IMPORTED_MODULE_2__.TextureSamplingMode.NEAREST,pixelFormat:T?_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RED:_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RGBA,internalFormat:T?_enums_js__WEBPACK_IMPORTED_MODULE_2__.SizedPixelFormat.R32F:_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RGBA};if(F)return L||i.warnOnce("Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced."),{dataType:d,samplingMode:L?_enums_js__WEBPACK_IMPORTED_MODULE_2__.TextureSamplingMode.LINEAR:_enums_js__WEBPACK_IMPORTED_MODULE_2__.TextureSamplingMode.NEAREST,pixelFormat:w?_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RED:_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RGBA,internalFormat:w?_enums_js__WEBPACK_IMPORTED_MODULE_2__.SizedPixelFormat.R16F:_enums_js__WEBPACK_IMPORTED_MODULE_2__.PixelFormat.RGBA};throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("heatmap:missing-hardware-support","HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.")}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,